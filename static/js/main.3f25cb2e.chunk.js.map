{"version":3,"sources":["County/Constants.js","Navbar.js","County/BarChart.js","County/DataTileRow.js","County/DataTile.js","County/helper.js","County/EconomyPanel.js","County/ElectionSummary.js","County/ElectionResults.js","County/Spectrum.js","County/ElectionPanel.js","County/CountyApi.js","County/LoadingText.js","County/CountyFinder.js","County/County.js","Map/Choropleth.js","Map/YearDropdown.js","Map/CmpDropdown.js","Map/CmpInput.js","Map/VariableDropdown.js","Map/FilterCheckbox.js","Map/StateCheckbox.js","Map/Map.js","Graph/YearDropdown.js","Graph/IndustryDropdown.js","Graph/XVariableDropdown.js","Graph/YVariableDropdown.js","Graph/ScatterGraph.js","Graph/BarGraph.js","Graph/Graph.js","Trends/TrendsApi.js","Trends/ElectionGraph.js","Trends/GDPGraph.js","Trends/IndustrySelector.js","Trends/IndustryGraph.js","Trends/IndustryPanel.js","Trends/TrendsContainer.js","Trends/CountyTrends.js","Trends/StateFinder.js","Trends/StateTrends.js","Trends/NationalTrends.js","Trends/Trends.js","App.js","serviceWorker.js","index.js"],"names":["YEAR","firstGDP","lastGDP","election","PLACEHOLDER","countyName","countyState","gdpData","Array","fill","fastestGrowingIndustry","from","length","topIndustry","electionResult","map","vals","GDPGrowthPercentile","stateGDPRank","countyVotingForParty","numCountyInState","CANDIDATE_IMAGE","INDUSTRY_ICON","STATES","Navbar","linkStyle","padding","fontSize","color","className","style","top","width","background","textAlign","id","href","process","BarChart","this","props","title","colSpan","unit","data","value","index","barWidth","scale","Math","max","round","maxValue","key","src","alt","idPrefix","barColor","toFixed","React","Component","DataTileRow","DataTile","C","require","isEmpty","undefined","getPartyPreference","preference","weight","repWinCount","forEach","totalVote","parseInt","repPct","demPct","min","getGDPCAGR","pow","getGrowthChartData","growthChartData","type","label","i","push","EconomyPanel","includes","gdpDatum","isNaN","isGDPDataValid","INDUSTRY_ICON_PATH","ASSETS_PATH","tileData","getTileData","chartType","options","legend","vAxis","desc","icon","parseFloat","ElectionSummary","stats","demWinCount","demWinLead","repWinLead","votesFirstElection","votesPenultimateElection","votesLastElection","getStats","ElectionResults","CANDIDATE_IMG_PATH","CHECKMARK_ICON","demBarWidth","repBarWidth","repWon","marginLeft","marginRight","Spectrum","Object","keys","backgroundImage","ElectionPanel","electionData","isElectionDataValid","getCountyNameState","fips","result","fetch","ENDPOINT","concat","then","response","ok","Error","json","catch","error","console","getGDPGrowthPercentile","getStateGDPRank","getCountyVotingForParty","getCountyElectionResult","elections","d_dem","d_rep","getCountyGDP","row","getCountyTopIndustries","values","getCountyGrowingIndustry","LoadingText","text","CountyFinder","getCounties","state","setState","isFetching","counties","getCountiesInState","buttonList","county","NAME","onClick","getNewCounty","FIPS","config","County","apis","Promise","all","api","getCountyData","newState","datum","validCounty","document","window","history","pushState","getElementById","scrollIntoView","match","params","Plotly","register","y","Plot","createPlotlyComponent","Choropleth","topIndustryColorscale","countyNames","z","industries","nonAggregateIndustries","nonAggregateIndIDs","topIndustryColorbar","customdata","colorscale","zmin","zmax","zauto","height","year","queryURL","filter","filterYear","operand","val","industry","hovertemplate","showscale","level","locationmode","locations","names","updateDimensions","bind","len","sort","a","b","range","p20","floor","toString","p40","p60","p80","gdpColorscale","startsWith","getIndustryName","states","currentState","method","res","err","log","rowObj","Z","j","indexOf","zMinMaxAuto","indID","substring","indIDs","INDUSTRY_ID","backgroundColor","addEventListener","queryZ","innerWidth","removeEventListener","prevProps","geojson","location","points","layout","geo","scope","autosize","margin","t","l","r","dragmode","responsive","display","alignItems","justifyContent","nextProps","prevState","years","y_str","YearDropdown","selectedYear","handleChange","e","target","handleYearChange","forceUpdate","htmlFor","name","onChange","CmpDropdown","operators","selectedOp","handleOpChange","CmpInput","filterLabel","handleValChange","VariableDropdown","vars","selectedVar","includeCategorical","handleVarChange","FilterCheckbox","checked","reverse","handleFilterChange","StateCheckbox","handleLevelChange","Map","handleClick","electionYears","nextVar","nextYear","errorMsg","nextFilter","nextFilterVar","nextFilterYear","filterVar","op","nextOp","nextVal","nextIndustry","aggregate","nextAggregate","handleFilterYearChange","handleFilterVarChange","newVar","Number","substr","newFilter","newAggregate","newOp","newVal","IndustryDropdown","handleIndustryChange","XVariableDropdown","handleXVarChange","YVariableDropdown","handleYVarChange","fetch1Complete","fetch2Complete","fetch3Complete","Graph","xQueryURL","xVar","lastElectionYear","xIndustry1","xIndustry2","yQueryURL","yVar","yIndustry1","yIndustry2","errorMsg1","errorMsg2","componentDidMount","labels","needsXIndustryDropdown1","needsXIndustryDropdown2","needsYIndustryDropdown1","needsYIndustryDropdown2","xResult","yResult","handleXIndustry1Change","handleXIndustry2Change","handleYIndustry1Change","handleYIndustry2Change","newYear","newIndustry","xarr","yarr","labelsArr","locationsArr","XIndustryDropdown1","XIndustryDropdown2","YIndustryDropdown1","YIndustryDropdown2","finalXResult","finalYResult","finalLabels","finalLocations","dimension","documentElement","clientWidth","clientHeight","x","mode","marker","hovermode","industry1String","industry1","year1","industry2String","industry2","year2","industry3String","industry3","year3","errorMsg3","handleYear1Change","handleYear2Change","handleYear3Change","handleIndustry1Change","handleIndustry2Change","handleIndustry3Change","xaxis","automargin","graphChoice","useState","granularity","setGranularity","ERR_HANDLER","ElectionGraph","formattedData","Year","DemVote","RepVote","loader","hAxis","format","ticks","textStyle","chartArea","GDPGraph","entry","GDP","IndustrySelector","setIndustry","setIndustries","updateIndustry","handleUpdate","useEffect","industryList","MAP_ENDPOINT","IndustryGraph","gdp","industryGDP","rawIndustryGDPdata","proportionalGDPdata","proportion","IndustryPanel","TrendsContainer","CountyTrends","setFips","setCountyName","stateName","setStateName","setElectionData","setGDPdata","setIndustryGDP","COUNTY_ENDPOINT","getCountyGDPData","getCountyIndustryGDP","StateFinder","setStates","getNewState","STATE","StateTrends","setCurrentState","getStateGDPData","getStateIndustryGDP","NationalTrends","getNationalIndustryGDP","Trends","trendChoice","GRAPH_ENDPOINT","TRENDS_ENDPOINT","App","basename","path","exact","component","render","to","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3f25cb2e.chunk.js","sourcesContent":["export const YEAR = {\r\n    firstGDP: 2001,\r\n    lastGDP: 2018,\r\n    election: [2000, 2004, 2008, 2012, 2016]\r\n}\r\n\r\nexport const PLACEHOLDER = {\r\n    countyName: \"Name\",\r\n    countyState: \"State\",\r\n    gdpData: Array(18).fill(0),\r\n    fastestGrowingIndustry: Array.from({length: 5}).fill({\"Description\": \"\", \"Growth\": \"0\"}),\r\n    topIndustry: Array.from({length: 5}).fill({\"Description\": \"\", \"GDP\": 0}),\r\n    electionResult: [\r\n       [2016, \"Hillary Clinton\", \"Donald Trump\"],\r\n       [2012, \"Barack Obama\", \"Mitt Romney\"],\r\n       [2008, \"Barack Obama\", \"John  McCain\"],\r\n       [2004, \"John Kerry\", \"George W. Bush\"],\r\n       [2000, \"Al Gore\", \"George W. Bush\"],\r\n    ].map((vals) => {\r\n        return {\"Year\": vals[0], \"DemCandidate\": vals[1], \"RepCandidate\": vals[2], \"DemVote\": 0, \"RepVote\": 0, \"TotalVote\": 0}\r\n    }),\r\n    GDPGrowthPercentile: \"N/A\",\r\n    stateGDPRank: \"N/A\",\r\n    countyVotingForParty: \"\",\r\n    numCountyInState: 0,\r\n}\r\n\r\nexport const CANDIDATE_IMAGE = {\r\n    \"Donald Trump\": \"donald_trump.jpg\",\r\n    \"Hillary Clinton\": \"hillary_clinton.jpg\",\r\n    \"Barack Obama\": \"barack_obama.jpg\",\r\n    \"Mitt Romney\": \"mitt_romney.jpg\",\r\n    \"John McCain\": \"john_mccain.jpg\",\r\n    \"John Kerry\": \"john_kerry.jpg\",\r\n    \"George W. Bush\": \"george_bush.jpg\",\r\n    \"Al Gore\": \"al_gore.jpg\",\r\n}\r\nexport const INDUSTRY_ICON = {\r\n    \"Agriculture, forestry, fishing and hunting\": \"industry_02.png\",\r\n    \"Mining, quarrying, and oil and gas extraction\": \"industry_03.png\",\r\n    \"Utilities\": \"industry_04.png\",\r\n    \"Construction\": \"industry_05.png\",\r\n    \"Durable goods manufacturing\": \"industry_07.png\",\r\n    \"Nondurable goods manufacturing\": \"industry_08.png\",\r\n    \"Wholesale trade\": \"industry_09.png\",\r\n    \"Retail trade\": \"industry_10.png\",\r\n    \"Transportation and warehousing\": \"industry_11.png\",\r\n    \"Information\": \"industry_12.png\",\r\n    \"Finance and insurance\": \"industry_14.png\",\r\n    \"Real estate and rental and leasing\": \"industry_15.png\",\r\n    \"Professional, scientific, and technical services\": \"industry_17.png\",\r\n    \"Management of companies and enterprises\": \"industry_18.png\",\r\n    \"Administrative and support and waste management and remediation services\": \"industry_19.png\",\r\n    \"Educational services\": \"industry_21.png\",\r\n    \"Health care and social assistance\": \"industry_22.png\",\r\n    \"Arts, entertainment, and recreation\": \"industry_24.png\",\r\n    \"Accommodation and food services\": \"industry_25.png\",\r\n    \"Other services (except government and government enterprises)\": \"industry_26.png\",\r\n    \"Government and government enterprises\": \"industry_27.png\",\r\n}\r\nexport const STATES = [\r\n    \"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\",\r\n    \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\",\r\n    \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\",\r\n];\r\n","import React from 'react';\n\nfunction Navbar() {\n  const navStyle = {\n    top: 0,\n    width: \"100%\",\n    background: \"#cc0000\",\n    padding: 15,\n    textAlign: 'center'\n  }\n\n  const linkStyle = {\n    padding: 20,\n    fontSize: 24,\n    color: \"white\"\n  }\n\n  return (\n    <nav className=\"Navbar\" style={navStyle} id=\"navbar\">\n      <a href={process.env.PUBLIC_URL + \"/map\"} style={linkStyle}>Map</a>\n      <a href={process.env.PUBLIC_URL + \"/graph\"} style={linkStyle}>Graph</a>\n      <a href={process.env.PUBLIC_URL + \"/trends\"} style={linkStyle}>Trends</a>\n      <a href={process.env.PUBLIC_URL + \"/county\"} style={linkStyle}>County Details</a>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\r\nimport './styles/BarChart.css'\r\n\r\n/**\r\n * Creates horizontal bar chart\r\n *\r\n * Props:\r\n * - title: str, title of the chart\r\n * - idPrefix: str, prefix to chart element's id\r\n * - unit: str, unit of measurement\r\n * - barColor: str, color of the bar\r\n * - maxValue: number, the maximum value to be displayed\r\n * - scale: decimal 0-1, how much the max value bar occupies the horizontal space\r\n * - data: {value: number, desc: str description of the value, icon: path}\r\n *\r\n */\r\nexport default class BarChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"barchart-container\"}>\r\n                <div className={\"barchart-title\"}>{this.props.title}</div>\r\n                <table className={\"barchart-table\"}>\r\n                    <colgroup>\r\n                        <col className={\"barchart-table-col-1\"}/>\r\n                        <col className={\"barchart-table-col-2\"}/>\r\n                        <col className={\"barchart-table-col-3\"}/>\r\n                    </colgroup>\r\n                    <thead>\r\n                    <tr>\r\n                        <td colSpan={2}/>\r\n                        <td className={\"barchart-table-unit-header\"}><b>{this.props.unit}</b></td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.data.map((value, index) => {\r\n                        if (value[\"desc\"] === \"\") return null;\r\n                        let barWidth = this.props.scale * Math.max(0, Math.round(value[\"value\"] / this.props.maxValue * 100)) + '%';\r\n\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>\r\n                                    <div>\r\n                                        <img className={\"barchart-table-image\"} src={value[\"icon\"]}\r\n                                             alt={value[\"Description\"]}\r\n                                        />\r\n                                        <p id={`${this.props.idPrefix}-desc-${index}`}\r\n                                           className={\"barchart-table-image-caption\"}>\r\n                                            {value[\"desc\"]}\r\n                                        </p>\r\n                                    </div>\r\n                                </td>\r\n                                <td className={\"barchart-table-bar-container\"}>\r\n                                    <div className={\"barchart-table-bar\"}\r\n                                         style={{background: this.props.barColor, width: barWidth}}>\r\n                                        &nbsp;\r\n                                    </div>\r\n                                </td>\r\n                                <td id={`${this.props.idPrefix}-value-${index}`}>\r\n                                    {value[\"value\"].toFixed(1)}\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport './styles/DataTileRow.css'\r\n\r\n/**\r\n * Data tile row group\r\n *\r\n * Props:\r\n * - data: [\r\n *          {id: str element id,\r\n *          type: \"value\" or \"icon\",\r\n *          title: str name of the data,\r\n *          value: str\r\n *          }, ..., {...}]\r\n */\r\nexport default class DataTileRow extends React.Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <tr>\r\n                    {this.props.data.map((value, index) => {\r\n                        return (\r\n                            <Fragment key={index}>\r\n                                <td className={\"data-tile-title\"}>{value[\"title\"]}</td>\r\n                                {index === this.props.data.length - 1 ? null :\r\n                                    <td className={\"data-tile-separator\"}/>\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    {this.props.data.map((value, index) => {\r\n                        return (\r\n                            <Fragment key={index}>\r\n                                <td id={value[\"id\"]} className={\"data-tile\"}>\r\n                                    {value[\"type\"] === \"value\" ? value[\"value\"] :\r\n                                        <Fragment>\r\n                                            <img\r\n                                                className={\"data-tile-image\"}\r\n                                                src={value[\"src\"]}\r\n                                                alt={value[\"caption\"]}\r\n                                            />\r\n                                            <div className={\"data-tile-image-caption\"}>\r\n                                                {value[\"caption\"]}\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    }\r\n                                </td>\r\n                                {index === this.props.data.length - 1 ? null : <td/>}\r\n                            </Fragment>\r\n                        )\r\n                    })}\r\n                </tr>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport './styles/DataTile.css'\r\nimport DataTileRow from \"./DataTileRow\";\r\n\r\n/**\r\n * Display data in tile format.\r\n *\r\n * Props:\r\n * - title: str\r\n * - data: [\r\n *          [{id: str element id,\r\n *          type: \"value\" or \"icon\",\r\n *          title: str name of the data,\r\n *          value: str\r\n *          }, ..., {...}]     // row one\r\n *         , ..., [...]        // subsequent rows\r\n *        ]\r\n */\r\nexport default class DataTile extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"data-tile-container\"}>\r\n                <div className={\"title data-tile-container-title\"}>\r\n                    {this.props.title}\r\n                </div>\r\n                <table>\r\n                    <tbody>\r\n                    {this.props.data.map((data, index) => {\r\n                        return (\r\n                            <Fragment key={index}>\r\n                                <DataTileRow\r\n                                    data={data}/>\r\n                                {(index === this.props.data.length - 1) ?\r\n                                    null :\r\n                                    (<tr><td>&nbsp;</td></tr>)}\r\n                            </Fragment>\r\n                        );\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {INDUSTRY_ICON} from \"./Constants\";\r\nconst C = require('./Constants')\r\n\r\n/**\r\n * Check if data is undefined, null, or of length 0\r\n *\r\n * @param data\r\n * @returns {boolean}\r\n */\r\nexport function isEmpty(data) {\r\n    return data === undefined || data === null || data.length === 0\r\n}\r\n\r\n/**\r\n * Compute a county's party preference over the last 5 elections\r\n *\r\n * Scale: 0 to 100\r\n *        0   = ALL votes goes to Democrats\r\n *        100 = ALL votes goes to Republican\r\n *\r\n * More weight given to more recent elections.\r\n *\r\n * Preference = \\sum_{Election Years} weight_{Year} * \\frac{RepPct_{Year}}{TotalVote_{Year}}\r\n *\r\n * Adjustment:\r\n *   Preference += 10 if Republican won >= 4 of the last 5 elections\r\n *   Preference -= 10 if Democrats won  >= 4 of the last 5 elections\r\n *   Rationale: avoid marking county where one party *always* gather 55~65% votes as 'Swing' county\r\n *\r\n * @param electionResult\r\n * @returns number\r\n */\r\nexport function getPartyPreference(electionResult) {\r\n    let length = electionResult.length;\r\n    if (length !== 5) return 50;\r\n\r\n    let preference = 0;         // weighted avg of # Republican Votes / # Total Vote\r\n    let weight = [0.5, 0.2, 0.2, 0.05, 0.05];  // more weight for more recent elections\r\n    let repWinCount = 0;        // # of election won by Republican\r\n\r\n    // result sorted by most recent first\r\n    electionResult.forEach((value, index) => {\r\n        let totalVote = parseInt(value[\"TotalVote\"])\r\n        let repPct = parseInt(value[\"RepVote\"]) * 100 / totalVote;\r\n        let demPct = parseInt(value[\"DemVote\"]) * 100 / totalVote;\r\n        repWinCount += repPct > demPct ? 1 : 0;\r\n        preference += (repPct * weight[index]);\r\n    });\r\n\r\n    // bonus 10pp if either party won 4 or more of the last 5 elections\r\n    if (repWinCount >= 4) preference = Math.min(100, preference + 10)\r\n    if (repWinCount <= 2) preference = Math.max(0, preference - 10)\r\n    return preference;\r\n}\r\n\r\n\r\n/**\r\n * Compute basic election stats\r\n *\r\n * @param electionResult\r\n * @returns {{WinnerLead: number, WinnerParty: string, WinnerCount: number, LastNumVotes: *, VotePctChangeFirstElection: number, VotePctChangePenultimateElection: number}}\r\n */\r\nexport function getStats(electionResult) {\r\n    let repWinCount = 0;\r\n    let demWinCount = 0;\r\n    let demWinLead = 0;\r\n    let repWinLead = 0;\r\n\r\n    let votesFirstElection = 0;\r\n    let votesPenultimateElection = 0;\r\n    let votesLastElection = 0;\r\n\r\n    // assume electionResult is sorted by year desc\r\n    electionResult.forEach((value) => {\r\n        const totalVote = parseInt(value[\"TotalVote\"])\r\n        let demPct = parseInt(value[\"DemVote\"]) * 100 / totalVote;\r\n        let repPct = parseInt(value[\"RepVote\"]) * 100 / totalVote;\r\n\r\n        if (repPct > demPct) {\r\n            repWinCount += 1\r\n            repWinLead += repPct - demPct\r\n        } else {\r\n            demWinCount += 1\r\n            demWinLead += demPct - repPct\r\n        }\r\n        if (value[\"Year\"] === C.YEAR.election[C.YEAR.election.length - 1]) votesLastElection = totalVote;\r\n        if (value[\"Year\"] === C.YEAR.election[C.YEAR.election.length - 2]) votesPenultimateElection = totalVote;\r\n        if (value[\"Year\"] === C.YEAR.election[0]) votesFirstElection = totalVote;\r\n    });\r\n\r\n    return {\r\n        \"WinnerParty\": (repWinCount >= 3 ? 'Republican' : 'Democratic'),\r\n        \"WinnerCount\": (repWinCount >= 3 ? repWinCount : 5 - repWinCount),\r\n        \"WinnerLead\": (repWinCount >= 3 ? repWinLead / repWinCount : demWinLead / demWinCount),\r\n        \"LastNumVotes\": votesLastElection,\r\n        \"VotePctChangeFirstElection\": 100 * ((votesLastElection / votesFirstElection) - 1),\r\n        \"VotePctChangePenultimateElection\": 100 * ((votesPenultimateElection / votesFirstElection) - 1)\r\n    };\r\n}\r\n\r\n\r\nexport function isGDPDataValid(gdpData) {\r\n    if (gdpData === undefined || gdpData === C.PLACEHOLDER[\"gdpData\"] || gdpData.includes(null) || gdpData.length !== 18) {\r\n        return false;\r\n    }\r\n    for (const gdpDatum of gdpData) {\r\n        if (isNaN(gdpDatum) || gdpDatum <= 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function isElectionDataValid(electionData) {\r\n    if (electionData === undefined || electionData === C.PLACEHOLDER[\"electionResult\"] || electionData.includes(null) || electionData.length !== 5) {\r\n        return false;\r\n    }\r\n    for (const electionDatum of electionData) {\r\n        if (electionDatum[\"TotalVote\"] <= 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function getTotalGDP(gdpData) {\r\n    return `$${(gdpData[gdpData.length - 1] / 1E6).toFixed(1)} bn`;\r\n}\r\n\r\nexport function getGDPCAGR(gdpData) {\r\n    return `${(100 * (Math.pow((gdpData[gdpData.length - 1] / gdpData[0]), 1 / (gdpData.length)) - 1)).toFixed(2)}%`;\r\n}\r\n\r\nexport function getGrowthChartData(gdpData) {\r\n    let growthChartData = [[{type: 'string', label: 'Year'}, {type: 'number', label: 'Growth'}]];\r\n    for (let i = 1; i < gdpData.length; i++) {\r\n        growthChartData.push([(C.YEAR.firstGDP + i) + \"\", 100 * ((gdpData[i] / gdpData[i - 1]) - 1)]);\r\n    }\r\n    return growthChartData;\r\n}\r\n\r\nexport function getTileData(data, INDUSTRY_ICON_PATH) {\r\n    return [\r\n        [\r\n            {\"id\": \"total-gdp-number\", \"type\": \"value\", \"title\": `GDP\\n\\n(${C.YEAR.lastGDP})`, \"value\": getTotalGDP(data.gdpData)},\r\n            {\r\n                \"id\": \"gdp-cagr-number\",\r\n                \"type\": \"value\",\r\n                \"title\": `Avg. Annual Growth\\n(${C.YEAR.firstGDP}-${C.YEAR.lastGDP})`,\r\n                \"value\": getGDPCAGR(data.gdpData)\r\n            },\r\n            {\r\n                \"id\": \"top-industry-icon\",\r\n                \"type\": \"icon\",\r\n                \"title\": \"Top Industry\",\r\n                \"caption\": data.topIndustry[0][\"Description\"],\r\n                \"src\": `${INDUSTRY_ICON_PATH}/${INDUSTRY_ICON[data.topIndustry[0][\"Description\"]]}`\r\n            }\r\n        ],\r\n        [\r\n            {\"id\": \"state-gdp-rank\", \"type\": \"value\", \"title\": \"State GDP Rank\", \"value\": data.stateGDPRank},\r\n            {\r\n                \"id\": \"gdp-growth-percentile\",\r\n                \"type\": \"value\",\r\n                \"title\": \"Avg. Annual Growth National Percentile\",\r\n                \"value\": data.GDPGrowthPercentile\r\n            },\r\n            {\r\n                \"id\": \"growing-industry-icon\",\r\n                \"type\": \"icon\",\r\n                \"title\": \"Fastest Growing Industry\",\r\n                \"caption\": data.fastestGrowingIndustry[0][\"Description\"],\r\n                \"src\": `${INDUSTRY_ICON_PATH}/${INDUSTRY_ICON[data.fastestGrowingIndustry[0][\"Description\"]]}`\r\n            },\r\n        ]\r\n    ];\r\n}\r\n","import React from 'react';\r\nimport Chart from \"react-google-charts\";\r\nimport BarChart from \"./BarChart\";\r\nimport DataTile from \"./DataTile\";\r\nimport {ASSETS_PATH} from \"./County\";\r\nimport {INDUSTRY_ICON} from \"./Constants\";\r\nimport {getGrowthChartData, isGDPDataValid, getTileData} from \"./helper\";\r\nimport './styles/EconomyPanel.css'\r\n\r\n/**\r\n * Display county's economic details.\r\n *\r\n */\r\nexport default class EconomyPanel extends React.Component {\r\n    render() {\r\n        let gdpData = this.props.gdpData;\r\n        if (!isGDPDataValid(gdpData)) {\r\n            return (\r\n                <div className={\"col-sm economy-panel\"}>\r\n                    <div className={\"economy-panel-title\"}>\r\n                        Economy\r\n                    </div>\r\n                    <p id={\"data-unavailable-warning\"}>\r\n                        Sorry, economic data for this county is incomplete or currently unavailable.\r\n                    </p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const INDUSTRY_ICON_PATH = `${ASSETS_PATH}/icons/industry`;\r\n        let tileData = getTileData({...this.props}, INDUSTRY_ICON_PATH);\r\n\r\n        return (\r\n            <div className={\"col-sm economy-panel\"}>\r\n                <div className={\"economy-panel-title\"}>\r\n                    Economy\r\n                </div>\r\n\r\n                <DataTile\r\n                    title={\"Overview\"}\r\n                    data={tileData}\r\n                />\r\n\r\n                <div id={\"gdp-growth-chart\"}>\r\n                    <div className={\"econ-subpanel-title\"}>GDP Growth</div>\r\n                    <Chart chartType=\"LineChart\" data={getGrowthChartData(gdpData)}\r\n                           options={{legend: 'none', vAxis: {title: '% YoY'},}}/>\r\n                </div>\r\n\r\n                <BarChart\r\n                    title=\"Top 5 Industries\"\r\n                    idPrefix=\"top-gdp\"\r\n                    unit=\"%GDP\"\r\n                    barColor=\"blue\"\r\n                    maxValue={this.props.topIndustry[0][\"GDP\"] / gdpData[gdpData.length - 1] * 100}\r\n                    scale={0.9}\r\n                    data={\r\n                        [this.props.topIndustry.map((value, index) => {\r\n                            return {\r\n                                value: value[\"GDP\"] / gdpData[gdpData.length - 1] * 100,\r\n                                desc: value[\"Description\"],\r\n                                icon: `${INDUSTRY_ICON_PATH}/${INDUSTRY_ICON[value[\"Description\"]]}`\r\n                            }\r\n                        })\r\n                        ][0]\r\n                    }\r\n                />\r\n\r\n                <BarChart\r\n                    title=\"Fastest Growing Industries\"\r\n                    idPrefix=\"growing-industry\"\r\n                    unit=\"%\"\r\n                    barColor=\"red\"\r\n                    maxValue={parseFloat(this.props.fastestGrowingIndustry[0][\"Growth\"])}\r\n                    scale={0.9}\r\n                    data={\r\n                        [this.props.fastestGrowingIndustry.map((value, index) => {\r\n                            return {\r\n                                value: parseFloat(value[\"Growth\"]),\r\n                                desc: value[\"Description\"],\r\n                                icon: `${INDUSTRY_ICON_PATH}/${INDUSTRY_ICON[value[\"Description\"]]}`\r\n                            }\r\n                        })\r\n                        ][0]\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {getStats} from \"./helper\";\r\nimport './styles/ElectionSummary.css'\r\nimport {YEAR} from \"./Constants\";\r\n\r\n/**\r\n * Display election facts in bullet points.\r\n *\r\n */\r\nexport default class ElectionSummary extends React.Component {\r\n    render() {\r\n        let electionResult = this.props.electionResult;\r\n        let stats = getStats(electionResult);\r\n\r\n        return (\r\n            <table className={\"election-table\"}>\r\n                <tbody>\r\n                <tr>\r\n                    <td colSpan={\"5\"} style={{textAlign: \"justify\"}}>\r\n                        <ul>\r\n                            <li id={\"elec-points-0\"}>{stats[\"WinnerParty\"]} candidates won {stats[\"WinnerCount\"]} out of\r\n                                the\r\n                                last 5 general elections in {this.props.countyName} County, {this.props.countyState}.\r\n                            </li>\r\n                            <li id={\"elec-points-1\"}>The {stats[\"WinnerParty\"]} winners, on average, lead\r\n                                by {stats[\"WinnerLead\"].toFixed(1)} percentage point.\r\n                            </li>\r\n                            <li id={\"elec-points-2\"}>\r\n                                {stats[\"LastNumVotes\"]} in {this.props.countyName} County voted 2016 election,\r\n                                a {(stats[\"VotePctChangePenultimateElection\"]).toFixed(1)}% {stats[\"VotePctChangePenultimateElection\"] > 0 ? 'increase' : 'decrease'} to\r\n                                that of {YEAR.election[YEAR.election.length - 2]},\r\n                                a {(stats[\"VotePctChangeFirstElection\"]).toFixed(1)}% {stats[\"VotePctChangeFirstElection\"] > 0 ? 'increase' : 'decrease'} to\r\n                                that of {YEAR.election[0]}.\r\n                            </li>\r\n                            {this.props.countyVotingForParty.length - 1 === 0 ?\r\n                                <li id={\"elec-points-3\"}>\r\n                                    {this.props.countyName} County is the only county\r\n                                    (out of {this.props.numCountyInState}) in {this.props.countyState} where\r\n                                    the {stats[\"WinnerParty\"]} candidate won.\r\n                                </li>\r\n                                :\r\n                                <li id={\"elec-points-3\"}>\r\n                                    {this.props.countyName} County\r\n                                    joins {this.props.countyVotingForParty.length - 1} other\r\n                                    counties in {this.props.countyState} that pre-dominantly voted\r\n                                    for {stats[\"WinnerParty\"]} candidate in 2016,\r\n                                    out of the {this.props.numCountyInState} counties in {this.props.countyState}.\r\n                                </li>\r\n                            }\r\n                        </ul>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport {CANDIDATE_IMAGE} from \"./Constants\";\r\nimport {ASSETS_PATH} from \"./County\";\r\nimport './styles/ElectionResults.css'\r\n\r\n/**\r\n * Display past election results.\r\n *\r\n */\r\nexport default class ElectionResults extends React.Component {\r\n    render() {\r\n        let CANDIDATE_IMG_PATH = `${ASSETS_PATH}/images/candidate`;\r\n        let CHECKMARK_ICON = `${ASSETS_PATH}/icons/other/checkmark.svg`;\r\n\r\n        return (\r\n            <table className={\"election-table\"}>\r\n                <tbody>\r\n                {this.props.electionResult.map((value, index) => {\r\n                    let totalVote = parseInt(value[\"TotalVote\"])\r\n                    let demPct = parseInt(value[\"DemVote\"]) * 100 / totalVote;\r\n                    let repPct = parseInt(value[\"RepVote\"]) * 100 / totalVote;\r\n                    let demBarWidth = isNaN(demPct) ? 0 : Math.round(demPct);\r\n                    let repBarWidth = isNaN(repPct) ? 0 : Math.round(repPct);\r\n                    let repWon = demPct < repPct\r\n\r\n                    return (\r\n                        <Fragment key={index}>\r\n                            <tr className={\"election-table-year-container\"}>\r\n                                <td/>\r\n                                <td className={\"election-table-year\"} colSpan={2}>\r\n                                    <h3>{value[\"Year\"]}</h3></td>\r\n                                <td/>\r\n                            </tr>\r\n                            <tr className={\"election-table-result-container\"} key={index}>\r\n                                <td className={\"headshot-container\"}>\r\n                                    <img\r\n                                        src={`${CANDIDATE_IMG_PATH}/${CANDIDATE_IMAGE[value[\"DemCandidate\"]]}`}\r\n                                        alt={value[\"DemCandidate\"]}\r\n                                        className={\"headshot\"}\r\n                                    />\r\n                                    {value[\"DemCandidate\"]}\r\n                                </td>\r\n                                <td className={\"democrat-results-container\"}>\r\n                                    {repWon ? null :\r\n                                            <img\r\n                                                src={CHECKMARK_ICON}\r\n                                                alt=\"checkmark\" className={\"democrat-vote-checkmark\"}\r\n                                                style={{marginLeft: `${Math.min(77, 100 - demBarWidth + 5)}%`}}\r\n                                            />\r\n                                    }\r\n                                    <div className={\"democrat-vote-bar\"}\r\n                                         style={{marginLeft: `${100 - Math.round(demBarWidth)}%`}}>\r\n                                        &nbsp;\r\n                                    </div>\r\n                                    <div id={`elec-dem-pct-${index}`}>\r\n                                        {(totalVote === 0 ? 0 : demPct.toFixed(1)) + \"%\"}\r\n                                    </div>\r\n                                    <div id={`elec-dem-vote-${index}`}>\r\n                                        ({value[\"DemVote\"]})\r\n                                    </div>\r\n                                </td>\r\n                                <td className={\"republican-results-container\"}>\r\n                                    {!repWon ? null :\r\n                                        <img src={CHECKMARK_ICON} alt=\"checkmark\" className={\"republican-vote-checkmark\"}\r\n                                             style={{marginRight: `${Math.min(77, 100 - repBarWidth)}%`}}\r\n                                        />\r\n                                    }\r\n                                    <div className={\"republican-vote-bar\"} style={{width: repBarWidth + '%'}}>\r\n                                        &nbsp;\r\n                                    </div>\r\n                                    <div id={`elec-rep-pct-${index}`}>\r\n                                        &nbsp; {(totalVote === 0 ? 0 : repPct.toFixed(1)) + \"%\"}\r\n                                    </div>\r\n                                    <div id={`elec-rep-vote-${index}`}>\r\n                                        &nbsp; ({value[\"RepVote\"]})\r\n                                    </div>\r\n                                </td>\r\n                                <td className={\"headshot-container\"}>\r\n                                    <img\r\n                                        src={`${CANDIDATE_IMG_PATH}/${CANDIDATE_IMAGE[value[\"RepCandidate\"]]}`}\r\n                                        alt={value[\"RepCandidate\"]}\r\n                                        className={\"headshot\"}/>\r\n                                    {value[\"RepCandidate\"]}\r\n                                </td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './styles/Spectrum.css'\r\n\r\nexport default class Spectrum extends React.Component {\r\n    render() {\r\n        return (\r\n            <table className={\"spectrum-table\"}>\r\n                <tbody>\r\n                    <tr className={\"spectrum-container\"}>\r\n                        {Object.keys(this.props.label).map((key) => {\r\n                            return <td style={this.props.label[key][\"style\"]} key={key}>\r\n                                <b>\r\n                                    {this.props.label[key][\"label\"]}\r\n                                </b>\r\n                            </td>;\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan={Object.keys(this.props.label).length}\r\n                            style={{backgroundImage: `linear-gradient(to right, ${this.props.color})`}}\r\n                        >\r\n                            &nbsp;\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan={Object.keys(this.props.label).length}>\r\n                            {/* -3.5% is 0%; 96.5% is 100% */}\r\n                            <div className=\"arrow-up\"\r\n                                 style={{marginLeft: `${this.props.value - 3.5}%`}}>&nbsp;</div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ElectionSummary from \"./ElectionSummary\"\r\nimport ElectionResults from \"./ElectionResults\";\r\nimport {getPartyPreference, isElectionDataValid} from \"./helper\";\r\nimport Spectrum from \"./Spectrum\";\r\nimport './styles/ElectionPanel.css'\r\n\r\n/**\r\n * Display county's election details.\r\n */\r\nexport default class ElectionPanel extends React.Component {\r\n    render() {\r\n        if (!isElectionDataValid(this.props.electionResult)) {\r\n            return (\r\n                <div className={\"col-sm election-panel\"}>\r\n                    <div className={\"election-panel-title\"}>\r\n                        Elections\r\n                    </div>\r\n                    <p id={\"data-unavailable-warning\"}>\r\n                        Sorry, election data for this county is incomplete or currently unavailable.\r\n                    </p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={\"col-sm election-panel\"}>\r\n                <div className={\"election-panel-title\"}>\r\n                    Elections\r\n                </div>\r\n\r\n                <Spectrum\r\n                    label={{\r\n                        \"0\": {label: \"Democrats\", style: {textAlign: \"left\"}},\r\n                        \"1\": {label: \"Lean Dem\", style: {textAlign: \"left\"}},\r\n                        \"2\": {label: \"Swing\", style: {textAlign: \"center\"}},\r\n                        \"3\": {label: \"Lean Rep\", style: {textAlign: \"right\"}},\r\n                        \"4\": {label: \"Republican\", style: {textAlign: \"right\"}},\r\n                    }}\r\n                    value={getPartyPreference(this.props.electionResult)}\r\n                    color={\"blue, lightblue, lightpink, red\"}\r\n                />\r\n                <ElectionSummary {...this.props} />\r\n                <ElectionResults {...this.props}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {COUNTY_ENDPOINT as ENDPOINT} from '../App';\r\nimport {isEmpty} from \"./helper\";\r\n\r\nconst C = require('./Constants');\r\n\r\n/**\r\n * Get promise of values of all the details of a county\r\n *\r\n * @param fips\r\n * @returns {Promise<unknown[]>}\r\n */\r\nexport function getCountyData(fips) {\r\n    let apis = [\r\n        getCountyNameState,\r\n        getGDPGrowthPercentile,\r\n        getStateGDPRank,\r\n        getCountyVotingForParty,\r\n        getCountyElectionResult,\r\n        getCountyGDP,\r\n        getCountyTopIndustries,\r\n        getCountyGrowingIndustry,\r\n    ];\r\n    return Promise.all(apis.map((api) => {\r\n        return api(fips)\r\n    })).then((values) => {\r\n        return values;\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Given FIPS, get name of the county, state of the county.\r\n *\r\n * @param fips\r\n * @returns {Promise<{countyState: string, countyName: string}>}\r\n */\r\nexport function getCountyNameState(fips) {\r\n    let result = {\r\n        countyName: C.PLACEHOLDER[\"countyName\"],\r\n        countyState: C.PLACEHOLDER[\"countyState\"]\r\n    };\r\n\r\n    return fetch(ENDPOINT.concat(`/counties?fips=${fips}`))\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch county name, state data.')\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!isEmpty(data)) {\r\n                result[\"countyName\"] = data[0][\"NAME\"];\r\n                result[\"countyState\"] = data[0][\"STATE\"];\r\n            }\r\n            return result;\r\n        })\r\n        .catch((error) => {\r\n            console.error('ERROR: ', error)\r\n        });\r\n}\r\n\r\n/**\r\n * Given FIPS, get annual GDP growth national percentile over available period.\r\n *\r\n * @param fips\r\n * @returns {Promise<{GDPGrowthPercentile: string}>}\r\n */\r\nexport function getGDPGrowthPercentile(fips) {\r\n    let result = {\r\n        GDPGrowthPercentile: C.PLACEHOLDER[\"GDPGrowthPercentile\"]\r\n    };\r\n\r\n    // Get county's avg. GDP growth national percentile (among counties)\r\n    return fetch(ENDPOINT.concat(`/gdp-growth-percentile?fips=${fips}`))\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch GDP growth percentile data.')\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!isEmpty(data)) {\r\n                result[\"GDPGrowthPercentile\"] = (data[0][\"PERCENTILE\"] * 100).toFixed(1) + '%';\r\n            }\r\n            return result;\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error: ', error)\r\n        });\r\n}\r\n\r\n/**\r\n * Get county's most recent GDP rank among counties in the same state.\r\n *\r\n * @param fips\r\n * @returns {Promise<{numCountyInState: number, stateGDPRank: string}>}\r\n */\r\nexport function getStateGDPRank(fips) {\r\n    let result = {\r\n        stateGDPRank: C.PLACEHOLDER[\"stateGDPRank\"],\r\n        numCountyInState: C.PLACEHOLDER[\"numCountyInState\"]\r\n    }\r\n\r\n    // Get county's GDP rank within the state\r\n    return fetch(ENDPOINT.concat(`/state-gdp-rank?fips=${fips}`))\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch state GDP rank data.')\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!isEmpty(data)) {\r\n                result[\"stateGDPRank\"] = `${data[0][\"COUNTY_GDP_RANK\"]} / ${data[0][\"STATE_COUNTY_COUNT\"]}`;\r\n                result[\"numCountyInState\"] = data[0][\"STATE_COUNTY_COUNT\"];\r\n            }\r\n            return result;\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error: ', error)\r\n        });\r\n}\r\n\r\n/**\r\n * Get the fips and county name within the same state where\r\n * the party winning the 2016 election in this county also won in those counties.\r\n *\r\n * @param fips\r\n * @returns {Promise<{countyVotingForParty: string}>}\r\n */\r\nexport function getCountyVotingForParty(fips) {\r\n    let result = {\r\n        countyVotingForParty: C.PLACEHOLDER[\"countyVotingForParty\"]\r\n    };\r\n\r\n    return fetch(ENDPOINT.concat(`/county-voting-for-party?fips=${fips}`))\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch county voting for party data.')\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!isEmpty(data)) {\r\n                result[\"countyVotingForParty\"] = data\r\n            }\r\n            return result;\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error: ', error)\r\n        });\r\n}\r\n\r\n\r\n/**\r\n * Returns election result object for a specified county\r\n *\r\n * @param  {} fips county ID\r\n * @returns electionResult json object\r\n *           Year: number;\r\n *           DemCandidate: string;\r\n *           RepCandidate: string;\r\n *           DemVote: number;\r\n *           RepVote: number;\r\n *           TotalVote: number;\r\n */\r\nexport function getCountyElectionResult(fips) {\r\n    let result = {\r\n        electionResult: C.PLACEHOLDER[\"electionResult\"]\r\n    };\r\n\r\n    return fetch(ENDPOINT.concat(`/elections?fips=${fips}`))\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch county voting for party data.')\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!isEmpty(data)) {\r\n                let elections = [];\r\n                for (let i of [...Array(data.length / 2).keys()]) {\r\n                    let d_dem = data[i * 2];\r\n                    let d_rep = data[i * 2 + 1];\r\n                    elections.push(\r\n                        {\r\n                            \"Year\": d_dem[\"YEAR\"],\r\n                            \"DemCandidate\": d_dem[\"CANDIDATE_NAME\"],\r\n                            \"RepCandidate\": d_rep[\"CANDIDATE_NAME\"],\r\n                            \"DemVote\": d_dem[\"CANDIDATE_VOTES\"],\r\n                            \"RepVote\": d_rep[\"CANDIDATE_VOTES\"],\r\n                            \"TotalVote\": d_dem[\"TOTAL_VOTES\"]      // same as d_rep[\"TOTAL_VOTES\"]\r\n                        }\r\n                    );\r\n                }\r\n                result[\"electionResult\"] = elections;\r\n            }\r\n            return result;\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error: ', error)\r\n        });\r\n}\r\n\r\n/**\r\n * @param  {} fips county identifier\r\n * @returns array of gdp data\r\n */\r\nexport function getCountyGDP(fips) {\r\n    let result = {gdpData: C.PLACEHOLDER[\"gdpData\"]};\r\n\r\n    return fetch(ENDPOINT.concat(`/annual-gdp?fips=${fips}`))\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch GDP data.')\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!isEmpty(data)) {\r\n                result[\"gdpData\"] = data.map((row) => {\r\n                    return row[\"GDP\"]\r\n                })\r\n            }\r\n            return result;\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error: ', error)\r\n        });\r\n}\r\n\r\n/**\r\n * @param  {} fips county identifier\r\n * @returns \"Description\" : String\r\n *          \"Growth\" : percentage\r\n *          for top 5 industries\r\n */\r\nexport function getCountyTopIndustries(fips) {\r\n    let result = {topIndustry: C.PLACEHOLDER[\"topIndustry\"]};\r\n\r\n    return fetch(ENDPOINT.concat(`/top-industry?fips=${fips}`))\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch top industry data.')\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!isEmpty(data)) {\r\n                result[\"topIndustry\"] = data.map((values) => {\r\n                    return {\"Description\": values[\"Description\"], \"GDP\": values[\"GDP\"]}\r\n                });\r\n            }\r\n            return result;\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error: ', error)\r\n        });\r\n}\r\n\r\n/**\r\n * @param  {} fips\r\n * @returns \"Description\" : String\r\n *          \"Growth\" : percentage\r\n *          for top 5 growing industries\r\n */\r\nexport function getCountyGrowingIndustry(fips) {\r\n    let result = {\r\n        fastestGrowingIndustry: C.PLACEHOLDER[\"fastestGrowingIndustry\"]\r\n    };\r\n\r\n    return fetch(ENDPOINT.concat(`/growing-industry?fips=${fips}`))\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch fastest growing industry data.')\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!isEmpty(data)) {\r\n                result[\"fastestGrowingIndustry\"] = data.map((values) => {\r\n                    return {\"Description\": values[\"Description\"], \"Growth\": values[\"Growth\"]};\r\n                });\r\n            }\r\n            return result;\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error: ', error)\r\n        });\r\n}\r\n\r\n/**\r\n * Get the list of counties in a given state.\r\n *\r\n * @param state, two letter abbreviation\r\n * @returns {Promise<{counties: []}>}\r\n */\r\nexport function getCountiesInState(state) {\r\n    let result = {counties: []};\r\n\r\n    return fetch(ENDPOINT.concat(`/counties?state=${state}`))\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch counties in state data.')\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (!isEmpty(data)) {\r\n                result[\"counties\"] = data;\r\n            }\r\n            return result;\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error: ', error)\r\n        });\r\n}\r\n","import React from \"react\";\r\nimport './styles/LoadingText.css'\r\n\r\n/**\r\n * Custom loading text with 3 animated dots\r\n *\r\n * Props:\r\n * - id: element's id\r\n * - style: style of the text\r\n * - text: loading message\r\n *\r\n */\r\nexport default class LoadingText extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"loading-message\"}\r\n                id={this.props.id}\r\n                style={this.props.style}>\r\n                {this.props.text} <span>.</span><span>.</span><span>.</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {STATES} from './Constants'\r\nimport './styles/CountyFinder.css'\r\nimport {getCountiesInState} from \"./CountyApi\";\r\nimport {isEmpty} from \"./helper\";\r\nimport LoadingText from \"./LoadingText\";\r\n\r\n/**\r\n * Display states and counties within chosen state.\r\n */\r\nexport default class CountyFinder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {counties: [], isFetching: false}\r\n    }\r\n\r\n    getCounties = (state) => {\r\n        this.setState({isFetching: true});\r\n\r\n        getCountiesInState(state)\r\n            .then((counties) => {\r\n                if (isEmpty(counties)) {\r\n                    this.setState({counties: [], isFetching: false})\r\n                }\r\n                let buttonList = counties[\"counties\"].map((county, index) => {\r\n                    return (\r\n                        <div\r\n                            id={`btn-county-${county.NAME}`}\r\n                            className={\"btn btn-county\"}\r\n                            key={index}\r\n                            onClick={() => this.props.getNewCounty(county.FIPS)}>\r\n                            {county.NAME}\r\n                        </div>\r\n                    );\r\n                });\r\n                this.setState({counties: buttonList, isFetching: false})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"county-finder container\"}>\r\n                <div id={\"county-finder\"} className={\"row\"}>\r\n                    <h2><b>Find a county:</b></h2>\r\n                </div>\r\n                <div className={\"row\"}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr id={\"county-finder-state-container\"}>\r\n                            <td><b>State</b></td>\r\n                            <td>\r\n                                {\r\n                                    STATES.map((state, index) => {\r\n                                        return (\r\n                                            <div className={\"btn btn-state\"} key={index}\r\n                                                 onClick={() => this.getCounties(state)}\r\n                                                 id={`btn-state-${state}`}>\r\n                                                {state}\r\n                                            </div>);\r\n                                    })\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                        {!(this.state.counties.length === 0 && this.state.isFetching) ? null :\r\n                            (\r\n                                <tr id={\"county-finder-state-container\"}>\r\n                                    <td><b>County</b></td>\r\n                                    <td>\r\n                                    <LoadingText\r\n                                        style={{\"textAlign\": \"center\"}}\r\n                                        text={\"Fetching counties\"}\r\n                                    />\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        {(this.state.counties.length === 0) ? null :\r\n                            (\r\n                                <tr id={\"county-finder-state-container\"}>\r\n                                    <td><b>County</b></td>\r\n                                    <td>{this.state.counties}</td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './styles/County.css'\r\nimport EconomyPanel from \"./EconomyPanel\";\r\nimport ElectionPanel from \"./ElectionPanel\";\r\nimport CountyFinder from \"./CountyFinder\";\r\nimport {getCountyData} from \"./CountyApi\";\r\nimport LoadingText from \"./LoadingText\";\r\n\r\nconst C = require('./Constants')\r\nrequire('dotenv').config()\r\nexport const ASSETS_PATH = process.env.PUBLIC_URL + `/assets`;\r\n\r\n/**\r\n * Highest order component of the County details page.\r\n */\r\nexport default class County extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...C.PLACEHOLDER,\r\n            isFetching: false,\r\n            validCounty : true\r\n        };\r\n        document.title = 'County Details'\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match !== undefined && this.props.match.params.fips !== undefined) {\r\n            this.getNewCounty(this.props.match.params.fips);\r\n        }\r\n    }\r\n\r\n    getNewCounty = (fips) => {\r\n        this.setState({isFetching: true})\r\n\r\n        getCountyData(fips).then((data) => {\r\n            let newState = [];\r\n\r\n            // flatten results\r\n            for (const datum of data) {\r\n                newState = {...newState, ...datum};\r\n            }\r\n            this.setState({...newState, isFetching: false});\r\n\r\n            // set page title, window and scroll behavior\r\n            if (newState[\"countyName\"] === C.PLACEHOLDER[\"countyName\"]) {\r\n                this.setState({validCounty: false});\r\n                document.title = `County Details`;\r\n            } else {\r\n                this.setState({validCounty: true});\r\n                window.history.pushState({}, null, process.env.PUBLIC_URL + `/county/${fips}`);\r\n                document.getElementById(\"county-profile\").scrollIntoView();\r\n                document.title = `${this.state.countyName}, ${this.state.countyState} - County Details`\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <CountyFinder getNewCounty={this.getNewCounty}/>\r\n                <div id={\"county-profile\"}/>\r\n                {(this.state.isFetching ||\r\n                    this.state.countyName === C.PLACEHOLDER[\"countyName\"]\r\n                ) ? null :\r\n                    <div id={\"county-details\"} className={\"container\"}>\r\n                        <div id={\"county-name-container\"}>\r\n                            <h1 id={\"county-name\"}>\r\n                                {this.state.countyName === \"\" ? \"County Name, State\" :\r\n                                    `${this.state.countyName}, ${this.state.countyState}`}\r\n                            </h1>\r\n                        </div>\r\n                        <div className={\"panel-container container\"}>\r\n                            <div className={\"row\"}>\r\n                                <EconomyPanel {...this.state}/>\r\n                                <ElectionPanel {...this.state}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {!this.state.isFetching ? null : (\r\n                    <LoadingText\r\n                        id={\"fetching-message\"}\r\n                        style={{\"paddingBottom\":\"40vh\", \"fontSize\": \"18pt\"}}\r\n                        text={\"Fetching result\"}\r\n                    />\r\n                )}\r\n                {(this.state.isFetching || this.state.validCounty) ? null : (\r\n                    <h4>\r\n                        County not found.\r\n                    </h4>\r\n                )}\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './Map.css';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport Plotly from 'plotly.js/lib/core';\r\nimport {MAP_ENDPOINT as ENDPOINT} from '../App';\r\n\r\nPlotly.register([\r\n  require('plotly.js/lib/choropleth')\r\n]);\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport default class Choropleth extends React.Component {\r\n  // create state info in constructor\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fips: [],\r\n      countyNames: [],\r\n      z: [],\r\n      industries: [],\r\n      nonAggregateIndustries: [],\r\n      nonAggregateIndIDs: [],\r\n      topIndustryColorbar: [],\r\n      customdata: [],\r\n      colorscale: '',\r\n      title: '',\r\n      zmin: 0,\r\n      zmax: 0,\r\n      zauto: true,\r\n      width: 0,\r\n      height: 0,\r\n      year: props.year,\r\n      queryURL: props.queryURL,\r\n      filter: props.filter,\r\n      filterYear: props.filterYear,\r\n      operand: props.operand,\r\n      val: props.val,\r\n      industry: props.industry,\r\n      hovertemplate: '',\r\n      showscale: true,\r\n      level: props.level,\r\n      locationmode: '',\r\n      locations: [],\r\n      names: [],\r\n      props: props\r\n    };\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n\r\n  // responsive colorscale used for plotting GDP variables\r\n  gdpColorscale(z) {\r\n    let vals = [];\r\n    let len = z.length;\r\n    for (let i = 0; i < len; i++) {\r\n      if (typeof z[i] === 'number') {\r\n        vals.push(z[i]);\r\n      }\r\n    }\r\n    vals.sort((a, b) => {return (a - b)});\r\n    len = vals.length;\r\n    let min = vals[0];\r\n    let max = vals[len-1];\r\n    let range = max - min;\r\n    let p20 = vals[Math.floor(0.2 * len) - 1];\r\n    p20 = ((p20 - min) / range).toString();\r\n    let p40 = vals[Math.floor(0.4 * len) - 1];\r\n    p40 = ((p40 - min) / range).toString();\r\n    let p60 = vals[Math.floor(0.6 * len) - 1];\r\n    p60 = ((p60 - min) / range).toString();\r\n    let p80 = vals[Math.floor(0.8 * len) - 1];\r\n    p80 = ((p80 - min) / range).toString();\r\n    return [\r\n      ['0.0', '#0000ff'],\r\n      [p20, '#00ffff'],\r\n      [p40, '#00ff00'],\r\n      [p60, '#ffff00'],\r\n      [p80, '#ff0000'],\r\n      ['1.0', '#ff00ff']\r\n    ];\r\n  }\r\n\r\n  // colorscale used for top industry query\r\n  topIndustryColorscale = [\r\n    ['0.0', 'forestgreen'],\r\n    ['0.05', 'dimgray'],\r\n    ['0.1', 'aquamarine'],\r\n    ['0.15', 'goldenrod'],\r\n    ['0.2', 'blue'],\r\n    ['0.25', 'mediumslateblue'],\r\n    ['0.3', 'yellow'],\r\n    ['0.35', 'darkcyan'],\r\n    ['0.4', 'deepskyblue'],\r\n    ['0.45', 'darkviolet'],\r\n    ['0.5', 'deeppink'],\r\n    ['0.55', 'lawngreen'],\r\n    ['0.6', 'lightcoral'],\r\n    ['0.65', 'maroon'],\r\n    ['0.7', 'midnightblue'],\r\n    ['0.75', 'wheat'],\r\n    ['0.8', 'orangered'],\r\n    ['0.85', 'orchid'],\r\n    ['0.9', 'silver'],\r\n    ['0.95', 'darkorange'],\r\n    ['1.0', 'red']\r\n  ];\r\n\r\n  // determine new map parameters based on query type\r\n  colorscale(queryURL, gdpColorscale) {\r\n    if (queryURL.startsWith('/rep-dem-diff')) return 'RdBu';\r\n    if (queryURL.startsWith('/rep-votes')) return [['0.0', 'white'], ['1.0', 'red']];\r\n    if (queryURL.startsWith('/dem-votes')) return [['0.0', 'white'], ['1.0', 'blue']];\r\n    if (queryURL.startsWith('/other-votes')) return [['0.0', 'white'], ['1.0', 'green']];\r\n    if (queryURL.includes('gdp')) return gdpColorscale;\r\n    if (queryURL.startsWith('/top-industry')) return this.topIndustryColorscale;\r\n  }\r\n  title(queryURL) {\r\n    if (queryURL.startsWith('/rep-dem-diff')) return '% Republican votes - % Democrat votes in ' + this.state.year;\r\n    if (queryURL.startsWith('/rep-votes')) return '% Republican votes in ' + this.state.year;\r\n    if (queryURL.startsWith('/dem-votes')) return '% Democrat votes in ' + this.state.year;\r\n    if (queryURL.startsWith('/other-votes')) return '% Other votes in ' + this.state.year;\r\n    if (queryURL.startsWith('/total-gdp')) return 'Total GDP (millions of dollars) in ' + this.state.year;\r\n    if (queryURL.startsWith('/industry-gdp')) return '% GDP from ' + this.getIndustryName(this.state.industry) + ' in ' + this.state.year;\r\n    if (queryURL.startsWith('/top-industry')) return 'Top Industry (non-aggregate) in ' + this.state.year;\r\n  }\r\n  zMinMaxAuto(queryURL) {\r\n    if (queryURL.startsWith('/rep-dem-diff')) return [-100, 100, false];\r\n    if ((queryURL.startsWith('/rep-votes')) || (queryURL.startsWith('/dem-votes'))) return [0, 100, false];\r\n    if (queryURL.startsWith('/top-industry')) return [0, 20, false];\r\n    return [0, 100, true];\r\n  }\r\n  hovertemplate(queryURL) {\r\n    if ((queryURL.startsWith('/top-industry')) || (queryURL.startsWith('/total-gdp'))) {\r\n      return '<b>%{text}</b><br>%{customdata}<extra></extra>';\r\n    }\r\n    return '<b>%{text}</b><br>%{z}<extra></extra>';\r\n  }\r\n  locationmode(queryURL, states) {\r\n    if (queryURL.includes('level=county')) return ['geojson-id', this.state.fips, this.state.countyNames];\r\n    return ['USA-states', states, states];\r\n  }\r\n\r\n  // query the specified URL and update state accordingly\r\n  queryZ() {\r\n    let queryURL = this.state.queryURL + '?year=' + this.state.year +\r\n      '&filter=' + this.state.filter + '&filteryear=' + this.state.filterYear +\r\n      '&operand=' + this.state.operand + '&val=' + this.state.val +\r\n      '&industry=' + this.state.industry + '&level=' + this.state.level;\r\n    let currentState = this.state;\r\n    let customdata = [];\r\n    fetch(ENDPOINT.concat(queryURL),\r\n    {\r\n      method: 'GET'\r\n    }).then(res => {\r\n      return res.json();\r\n    }, err => {\r\n      console.log(err);\r\n    }).then(row => {\r\n      if (!row) return;\r\n      let z = row.map((rowObj, i) => rowObj.Z);\r\n      let states = row.map((rowObj, i) => rowObj.FIPS);\r\n      if (!z.length) {\r\n        z = [null];\r\n        states = [null];\r\n      }\r\n      if (queryURL.startsWith('/top-industry')) {\r\n        for (let j = 0; j < z.length; j++) {\r\n          customdata.push(this.state.nonAggregateIndustries[this.state.nonAggregateIndIDs.indexOf(z[j])]);\r\n          if (z[j] !== null) {\r\n            z[j] = this.state.nonAggregateIndIDs.indexOf(z[j]);\r\n          }\r\n        }\r\n      } else if (queryURL.startsWith('/total-gdp')) {\r\n        for (let j = 0; j < z.length; j++) {\r\n          if (z[j] === null) {\r\n            customdata.push(null);\r\n          } else {\r\n            customdata.push(z[j].toString());\r\n          }\r\n        }\r\n      }\r\n      let gdpColorscale = this.gdpColorscale(z);\r\n      let zMinMaxAuto = this.zMinMaxAuto(queryURL);\r\n      let locationmode = this.locationmode(queryURL, states);\r\n      // make sure query matches current selection; if not, abort\r\n      if ((currentState !== this.state) && (this.state.z.length > 0)) {\r\n        return;\r\n      }\r\n      // update state with query results\r\n      else {\r\n        this.setState({\r\n          colorscale: this.colorscale(queryURL, gdpColorscale),\r\n          title: this.title(queryURL),\r\n          zmin: zMinMaxAuto[0],\r\n          zmax: zMinMaxAuto[1],\r\n          zauto: zMinMaxAuto[2],\r\n          hovertemplate: this.hovertemplate(queryURL),\r\n          showscale: !(queryURL.startsWith('/top-industry')),\r\n          z: z,\r\n          customdata: customdata,\r\n          locationmode: locationmode[0],\r\n          locations: locationmode[1],\r\n          names: locationmode[2]\r\n        });\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // get the name of the industry with the specified id\r\n  getIndustryName(indID) {\r\n    return this.state.industries[indID-1];\r\n  }\r\n\r\n  componentDidMount() {\r\n    // get names and fips for all counties and store in state\r\n    fetch(ENDPOINT.concat(`/counties`),\r\n    {\r\n      method: 'GET'\r\n    }).then(res => {\r\n      return res.json();\r\n    }, err => {\r\n      console.log(err);\r\n    }).then(row => {\r\n      if (!row) return;\r\n      let fips = row.map((rowObj, i) => rowObj.FIPS);\r\n      let names = row.map((rowObj, i) => rowObj.NAME);\r\n      this.setState({\r\n        fips: fips,\r\n        countyNames: names\r\n      });\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n\r\n    // get names and IDs for all industries and store in state\r\n    fetch(ENDPOINT.concat(`/industries`),\r\n    {\r\n      method: 'GET'\r\n    }).then(res => {\r\n      return res.json();\r\n    }, err => {\r\n      console.log(err);\r\n    }).then(row => {\r\n      if (!row) return;\r\n      let industries = row.map((rowObj, i) => rowObj.NAME);\r\n      let i;\r\n      for (i = 0; i < industries.length; i++) {\r\n        if (industries[i].includes('2/')) {\r\n          industries[i] = industries[i].substring(0, industries[i].indexOf('2/'));\r\n        } else if (industries[i].includes('3/')) {\r\n          industries[i] = industries[i].substring(0, industries[i].indexOf('3/'));\r\n        }\r\n      }\r\n      this.setState({\r\n        industries: industries\r\n      })\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n\r\n    // get names and IDs for all non-aggregate industries and store in state\r\n    fetch(ENDPOINT.concat(`/non-aggregate-industries`),\r\n    {\r\n      method: 'GET'\r\n    }).then(res => {\r\n      return res.json();\r\n    }, err => {\r\n      console.log(err);\r\n    }).then(row => {\r\n      if (!row) return;\r\n      let industries = row.map((rowObj, i) => rowObj.NAME);\r\n      let indIDs = row.map((rowObj, i) => rowObj.INDUSTRY_ID);\r\n      let i;\r\n      let topIndustryColorbar = [];\r\n      for (i = 0; i < industries.length; i++) {\r\n        if (industries[i].includes('2/')) {\r\n          industries[i] = industries[i].substring(0, industries[i].indexOf('2/'));\r\n        } else if (industries[i].includes('3/')) {\r\n          industries[i] = industries[i].substring(0, industries[i].indexOf('3/'));\r\n        }\r\n        topIndustryColorbar.push(\r\n          <div className='colorbarBox'>\r\n            <div className='colorBox' style={{backgroundColor: this.topIndustryColorscale[i][1]}}></div>\r\n            <p className='colorbarLabel'>{industries[i]}</p>\r\n          </div>\r\n        );\r\n      }\r\n      this.setState({\r\n        nonAggregateIndustries: industries,\r\n        nonAggregateIndIDs: indIDs,\r\n        topIndustryColorbar: topIndustryColorbar\r\n      });\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n\r\n    // set dimensions of graph based on window size, and add event listener in case of window resize\r\n    this.updateDimensions();\r\n    window.addEventListener('resize', this.updateDimensions);\r\n\r\n    // execute default query\r\n    this.queryZ();\r\n  }\r\n\r\n  // update dimensions of map when window resized\r\n  updateDimensions() {\r\n    let width = Math.min(window.innerWidth * 0.9, 1400);\r\n    let height = width / 2;\r\n    this.setState({\r\n      width: width,\r\n      height: height\r\n    });\r\n  }\r\n\r\n  // remove event listener on unmount\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateDimensions);\r\n  }\r\n\r\n  // update graph when new info received from parent component\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps === prevState.props) return null;\r\n    return {\r\n      year: nextProps.year,\r\n      queryURL: nextProps.queryURL,\r\n      filter: nextProps.filter,\r\n      filterYear: nextProps.filterYear,\r\n      operand: nextProps.operand,\r\n      val: nextProps.val,\r\n      industry: nextProps.industry,\r\n      level: nextProps.level\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props === prevProps) {\r\n      return;\r\n    }\r\n    this.queryZ();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='choroplethWrap'>\r\n      {this.state.locationmode\r\n        ? <Plot\r\n            id = 'choropleth'\r\n            data = {[{\r\n              type: \"choropleth\",\r\n              geojson: \"https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json\",\r\n              locationmode: this.state.locationmode,\r\n              locations: this.state.locations,\r\n              z: this.state.z,\r\n              text: this.state.names,\r\n              colorscale: this.state.colorscale,\r\n              zmin: this.state.zmin,\r\n              zmax: this.state.zmax,\r\n              zauto: this.state.zauto,\r\n              hovertemplate: this.state.hovertemplate,\r\n              customdata: this.state.customdata,\r\n              showscale: this.state.showscale\r\n            }]}\r\n            onClick = {(data) => {\r\n              if (this.state.level === 'county') {\r\n                window.location.href = process.env.PUBLIC_URL + '/county/' + data.points[0].location + '#county-profile';\r\n              }\r\n            }}\r\n            layout = {{\r\n              geo: {scope: 'usa'},\r\n              width: this.state.width,\r\n              height: this.state.height,\r\n              autosize: true,\r\n              margin: {t: 0, b: 0, l: 0, r: 0},\r\n              title: {text: this.state.title, y: 0.95},\r\n              dragmode: false\r\n            }}\r\n            config = {{responsive: true}}\r\n          />\r\n        : <div style={{width: this.state.width, height: this.state.height, display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n            <h1>Loading...</h1>\r\n          </div>\r\n      }\r\n      {this.state.showscale\r\n        ? null\r\n        : <div id='colorbar'>{this.state.topIndustryColorbar}</div>\r\n      }\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n","import React from 'react';\r\n\r\nlet years = [];\r\n\r\nlet y;\r\nfor (y = 2000; y <= 2018; y++) {\r\n  let y_str = y.toString();\r\n  years.push(<option value={y_str} key={y_str}>{y_str}</option>);\r\n}\r\n\r\nexport default class YearDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      years: [],\r\n      selectedYear: '2016'\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // add years to dropdown\r\n  componentDidMount() {\r\n    this.setState({\r\n      years: years\r\n    });\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      selectedYear: e.target.value\r\n    });\r\n    this.props.handleYearChange(e.target.value);\r\n  }\r\n\r\n  // force update when props change\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props === prevProps) {\r\n      return;\r\n    }\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dropdown'>\r\n        <label htmlFor='years'>Year: </label>\r\n        <select name='years' value={this.state.selectedYear} onChange={this.handleChange}>\r\n          {this.state.years}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class CmpDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      operators: [],\r\n      selectedOp: 'gt'\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // add operators to dropdown\r\n  componentDidMount() {\r\n    var operators = [];\r\n    operators.push(<option value='gt' key='gt'>&gt;</option>);\r\n    operators.push(<option value='lt' key='lt'>&lt;</option>);\r\n    this.setState({\r\n      operators: operators\r\n    });\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      selectedOp: e.target.value\r\n    });\r\n    this.props.handleOpChange(e.target.value);\r\n  }\r\n\r\n  // force update when props change\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props === prevProps) {\r\n      return;\r\n    }\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dropdown'>\r\n        <label htmlFor='operators'>Comparison: </label>\r\n        <select name='operators' value={this.state.selectedOp} onChange={this.handleChange}>\r\n          {this.state.operators}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class CmpInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0,\r\n      filterLabel: '%'\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      val: e.target.value\r\n    });\r\n    this.props.handleValChange(e.target.value);\r\n  }\r\n\r\n  // update graph when new info received from parent component\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props === prevProps) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      filterLabel: this.props.filterLabel\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='cmp-dropdown'>\r\n      <input type='number' min='-9999999' max='-9999999' name='cmp-input' value={this.state.val} onChange={this.handleChange}/>\r\n      <label htmlFor='cmp-input'>{this.state.filterLabel}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {MAP_ENDPOINT as ENDPOINT} from '../App';\r\n\r\nexport default class VariableDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vars: [],\r\n      selectedVar: 'RepDemDiff'\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // add variables to dropdown\r\n  componentDidMount() {\r\n    var vars = [];\r\n    vars.push(<option value='RepDemDiff' key='RepDemDiff'>% Republican votes - % Democrat votes</option>);\r\n    vars.push(<option value='Democrat' key='Democrat'>% votes for Democrat</option>);\r\n    vars.push(<option value='Republican' key='Republican'>% votes for Republican</option>);\r\n    vars.push(<option value='Other' key='Other'>% votes for Other</option>);\r\n    vars.push(<option value='TotalGDP' key='TotalGDP'>Total GDP</option>);\r\n    if (this.props.includeCategorical) {\r\n      vars.push(<option value='TopIndustry' key='TopIndustry'>Top Industry (non-aggregate)</option>);\r\n    }\r\n    fetch(ENDPOINT.concat(`/industries`),\r\n    {\r\n      method: 'GET'\r\n    }).then(res => {\r\n      return res.json();\r\n    }, err => {\r\n      console.log(err);\r\n    }).then(row => {\r\n      if (!row) return;\r\n      let industries = row.map((rowObj, i) => rowObj.NAME);\r\n      let indIDs = row.map((rowObj, i) => rowObj.INDUSTRY_ID);\r\n      let i;\r\n      for (i = 0; i < industries.length; i++) {\r\n        if (industries[i].includes('2/')) {\r\n          industries[i] = industries[i].substring(0, industries[i].indexOf('2/'));\r\n        } else if (industries[i].includes('3/')) {\r\n          industries[i] = industries[i].substring(0, industries[i].indexOf('3/'));\r\n        }\r\n        vars.push(<option value={'Industry' + indIDs[i]} key={'Industry' + indIDs[i]}>% GDP from {industries[i]}</option>);\r\n      }\r\n      this.setState({\r\n        vars: vars\r\n      })\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      selectedVar: e.target.value\r\n    });\r\n    this.props.handleVarChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dropdown'>\r\n        <label htmlFor='vars'>Variable: </label>\r\n        <select name='vars' value={this.state.selectedVar} onChange={this.handleChange}>\r\n          {this.state.vars}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class FilterCheckbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    let reverse = !(this.state.checked);\r\n    this.setState({\r\n      checked: reverse\r\n    });\r\n    this.props.handleFilterChange(reverse);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='checkbox'>\r\n        <label htmlFor='filter'>Filter</label>\r\n        <input type='checkbox' name='filter' value='Filter' checked={this.state.checked} onChange={this.handleChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class StateCheckbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    let reverse = !(this.state.checked);\r\n    this.setState({\r\n      checked: reverse\r\n    });\r\n    this.props.handleLevelChange(reverse);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='checkbox'>\r\n        <label htmlFor='aggregate'>Aggregate by state</label>\r\n        <input type='checkbox' name='aggregate' value='Aggregate' checked={this.state.checked} onChange={this.handleChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './Map.css';\nimport Choropleth from './Choropleth';\nimport YearDropdown from './YearDropdown';\nimport CmpDropdown from './CmpDropdown';\nimport CmpInput from './CmpInput';\nimport VariableDropdown from './VariableDropdown';\nimport FilterCheckbox from './FilterCheckbox';\nimport StateCheckbox from './StateCheckbox';\nrequire('dotenv').config()\n\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    document.title = 'Map';\n    this.state = {\n      year: '2016',\n      nextYear: '2016',\n      queryURL: '/rep-dem-diff',\n      nextVar: '',\n      filter: false,\n      nextFilter: false,\n      filterYear: '2016',\n      nextFilterYear: '2016',\n      filterVar: 'none',\n      nextFilterVar: 'RepDemDiff',\n      filterLabel: '%',\n      op: 'gt',\n      nextOp: 'gt',\n      val: 0,\n      nextVal: 0,\n      industry: 1,\n      nextIndustry: 1,\n      errorMsg: '',\n      aggregate: false,\n      nextAggregate: false\n    }\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.handleVarChange = this.handleVarChange.bind(this);\n    this.handleFilterYearChange = this.handleFilterYearChange.bind(this);\n    this.handleFilterVarChange = this.handleFilterVarChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleOpChange = this.handleOpChange.bind(this);\n    this.handleValChange = this.handleValChange.bind(this);\n    this.handleLevelChange = this.handleLevelChange.bind(this);\n  }\n\n  // handle state change in year dropdown\n  handleYearChange(year) {\n    this.setState({\n      nextYear: year\n    });\n  }\n\n  // handle state change in variable drowdown\n  handleVarChange(newVar) {\n    this.setState({\n      nextVar: newVar\n    });\n    if (newVar.startsWith('Industry')) {\n      let indID = Number(newVar.substr(8));\n      this.setState({\n        nextIndustry: indID\n      });\n    }\n  }\n\n  // handle state change in filter checkbox\n  handleFilterChange(newFilter) {\n    this.setState({\n      nextFilter: newFilter\n    });\n  }\n\n  // handle state change in state checkbox\n  handleLevelChange(newAggregate) {\n    this.setState({\n      nextAggregate: newAggregate\n    });\n  }\n\n  // handle state change in operand\n  handleOpChange(newOp) {\n    this.setState({\n      nextOp: newOp\n    });\n  }\n\n  // handle state change in comparison value\n  handleValChange(newVal) {\n    this.setState({\n      nextVal: newVal\n    });\n  }\n\n  // handle state change in filter year dropdown\n  handleFilterYearChange(year) {\n    this.setState({\n      nextFilterYear: year\n    });\n  }\n\n  // handle state change in filter variable drowdown\n  handleFilterVarChange(newVar) {\n    this.setState({\n      nextFilterVar: newVar\n    });\n    if (newVar === 'TotalGDP') {\n      this.setState({\n        filterLabel: 'million dollars'\n      });\n    } else {\n      this.setState({\n        filterLabel: '%'\n      });\n    }\n  }\n\n  // when submit button is clicked, update state in order to re-render map\n  handleClick = () => {\n    let electionYears = ['2000', '2004', '2008', '2012', '2016'];\n    if ((this.state.nextVar === 'TotalGDP') || (this.state.nextVar.includes('Industry'))) {\n      if (this.state.nextYear === '2000') {\n        this.setState({\n          errorMsg: 'GDP data is not available for the year 2000'\n        });\n        return;\n      }\n    } else {\n      if (!electionYears.includes(this.state.nextYear)) {\n        this.setState({\n          errorMsg: 'Election data is not available for the year ' + this.state.nextYear\n        });\n        return;\n      }\n    }\n    if (this.state.nextFilter) {\n      if ((this.state.nextFilterVar === 'TotalGDP') || (this.state.nextFilterVar.includes('Industry'))) {\n        if (this.state.nextFilterYear === '2000') {\n          this.setState({\n            errorMsg: 'GDP data is not available for the year 2000'\n          });\n          return;\n        }\n      } else {\n        if (!electionYears.includes(this.state.nextFilterYear)) {\n          this.setState({\n            errorMsg: 'Election data is not available for the year ' + this.state.nextFilterYear\n          });\n          return;\n        }\n      }\n    }\n    let queryURL = this.state.queryURL;\n    if (this.state.nextVar === 'Democrat') {\n      queryURL = '/dem-votes';\n    } else if (this.state.nextVar === 'Republican') {\n      queryURL = '/rep-votes';\n    } else if (this.state.nextVar === 'Other') {\n      queryURL = '/other-votes';\n    } else if (this.state.nextVar === 'RepDemDiff') {\n      queryURL = '/rep-dem-diff';\n    } else if (this.state.nextVar === 'TotalGDP') {\n      queryURL = '/total-gdp';\n    } else if (this.state.nextVar.startsWith('Industry')) {\n      queryURL = '/industry-gdp';\n    }\n    else if (this.state.nextVar === 'TopIndustry') {\n      queryURL = '/top-industry';\n    }\n    if (this.state.nextFilter) {\n      this.setState({\n        year: this.state.nextYear,\n        filter: this.state.nextFilter,\n        filterYear: this.state.nextFilterYear,\n        filterVar: this.state.nextFilterVar,\n        op: this.state.nextOp,\n        val: this.state.nextVal,\n        queryURL: queryURL,\n        industry: this.state.nextIndustry,\n        errorMsg: '',\n        aggregate: this.state.nextAggregate\n      });\n    } else {\n      this.setState({\n        year: this.state.nextYear,\n        filter: this.state.nextFilter,\n        filterYear: this.state.nextFilterYear,\n        filterVar: 'none',\n        op: this.state.nextOp,\n        val: this.state.nextVal,\n        queryURL: queryURL,\n        industry: this.state.nextIndustry,\n        errorMsg: '',\n        aggregate: this.state.nextAggregate\n      });\n    }\n  };\n\n\n  render() {\n    return (\n      <div className='map'>\n        <Choropleth\n          year={this.state.year}\n          filter={this.state.filterVar}\n          filterYear={this.state.filterYear}\n          operand={this.state.op}\n          val={this.state.val}\n          queryURL={this.state.queryURL}\n          industry={this.state.industry}\n          level={this.state.aggregate ? 'state' : 'county'}\n        />\n        <p className='error'>{this.state.errorMsg}</p>\n        <p>Select a year and variable, then click \"Submit\" to update the map.</p>\n        <section className='selector'>\n          <YearDropdown\n            id='year-dropdown'\n            handleYearChange={this.handleYearChange}\n          />\n          <VariableDropdown\n            id='variable-dropdown'\n            handleVarChange={this.handleVarChange}\n            includeCategorical={true}\n          />\n          <StateCheckbox\n            id='aggregate'\n            checked={this.state.aggregate}\n            handleLevelChange={this.handleLevelChange}\n          />\n          <button id='submit' onClick={this.handleClick}>Submit</button>\n        </section>\n        <p>Optional: select a filter variable and year. If selected, only those counties that meet the stated condition will be mapped.</p>\n        <section className='filter'>\n          <FilterCheckbox\n            id='filter'\n            checked={this.state.filter}\n            handleFilterChange={this.handleFilterChange}\n          />\n          <YearDropdown\n            id='filter-year-dropdown'\n            handleYearChange={this.handleFilterYearChange}\n          />\n          <VariableDropdown\n            id='filter-variable-dropdown'\n            handleVarChange={this.handleFilterVarChange}\n          />\n          <CmpDropdown\n            id='cmp-dropdown'\n            handleOpChange={this.handleOpChange}\n          />\n          <CmpInput\n            id='cmp-input'\n            handleValChange={this.handleValChange}\n            filterLabel={this.state.filterLabel}\n          />\n        </section>\n        <p>Note: Election data is only available for election years (2000, 2004, 2008, 2012, and 2016). GDP data is not available for the year 2000.</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\n\r\nlet years = [];\r\n\r\nlet y;\r\nfor (y = 2000; y <= 2018; y++) {\r\n  let y_str = y.toString();\r\n  years.push(<option value={y_str} key={y}>{y_str}</option>);\r\n}\r\n\r\nexport default class YearDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      years: [],\r\n      selectedYear: '2016'\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // add years to dropdown\r\n  componentDidMount() {\r\n    this.setState({\r\n      years: years\r\n    });\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      selectedYear: e.target.value\r\n    });\r\n    this.props.handleYearChange(e.target.value);\r\n  }\r\n\r\n  // force update when props change\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props === prevProps) {\r\n      return;\r\n    }\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dropdown'>\r\n        <label htmlFor='years'>Year: </label>\r\n        <select name='years' value={this.state.selectedYear} onChange={this.handleChange}>\r\n          {this.state.years}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class IndustryDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vars: [],\r\n      selectedVar: '1'\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // add variables to dropdown\r\n  componentDidMount() {\r\n    var vars = [];\r\n    vars.push(<option key='1' value='1'>Private industries</option>);\r\n    vars.push(<option key='2' value='2'>Agriculture, forestry, fishing and hunting</option>);\r\n    vars.push(<option key='3' value='3'>Mining, quarrying, and oil and gas extraction</option>);\r\n    vars.push(<option key='4' value='4'>Utilities</option>);\r\n    vars.push(<option key='5' value='5'>Construction</option>);\r\n    vars.push(<option key='6' value='6'>Manufacturing</option>);\r\n    vars.push(<option key='7' value='7'>Durable goods manufacturing</option>);\r\n    vars.push(<option key='8' value='8'>Nondurable goods manufacturing</option>);\r\n    vars.push(<option key='9' value='9'>Wholesale trade</option>);\r\n    vars.push(<option key='10' value='10'>Retail trade</option>);\r\n    vars.push(<option key='11' value='11'>Transportation and warehousing</option>);\r\n    vars.push(<option key='12' value='12'>Information</option>);\r\n    vars.push(<option key='13' value='13'>Finance, insurance, real estate, rental, and leasing</option>);\r\n    vars.push(<option key='14' value='14'>Finance and insurance</option>);\r\n    vars.push(<option key='15' value='15'>Real estate and rental and leasing</option>);\r\n    vars.push(<option key='16' value='16'>Professional and business services</option>);\r\n    vars.push(<option key='17' value='17'>Professional, scientific, and technical services</option>);\r\n    vars.push(<option key='18' value='18'>Management of companies and enterprises</option>);\r\n    vars.push(<option key='19' value='19'>Administrative and support and waste management and remediation services</option>);\r\n    vars.push(<option key='20' value='20'>Educational services, health care, and social assistance</option>);\r\n    vars.push(<option key='21' value='21'>Educational services</option>);\r\n    vars.push(<option key='22' value='22'>Health care and social assistance</option>);\r\n    vars.push(<option key='23' value='23'>Arts, entertainment, recreation, accommodation, and food services</option>);\r\n    vars.push(<option key='24' value='24'>Arts, entertainment, and recreation</option>);\r\n    vars.push(<option key='25' value='25'>Accommodation and food services</option>);\r\n    vars.push(<option key='26' value='26'>Other services (except government and government enterprises)</option>);\r\n    vars.push(<option key='27' value='27'>Government and government enterprises</option>);\r\n    vars.push(<option key='28' value='28'>Natural resources and mining</option>);\r\n    vars.push(<option key='29' value='29'>Trade</option>);\r\n    vars.push(<option key='30' value='30'>Transportation and utilities</option>);\r\n    vars.push(<option key='31' value='31'>Manufacturing and information</option>);\r\n    vars.push(<option key='32' value='32'>Private goods-producing industries 2/</option>);\r\n    vars.push(<option key='33' value='33'>Private services-providing industries 3/</option>);\r\n\r\n    this.setState({\r\n        vars: vars\r\n    })\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      selectedVar: e.target.value\r\n    });\r\n    this.props.handleIndustryChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dropdown'>\r\n        <label htmlFor='vars'>Industry: </label>\r\n        <select name='vars' value={this.state.selectedVar} onChange={this.handleChange}>\r\n          {this.state.vars}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class XVariableDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vars: [],\r\n      selectedVar: 'Democrat'\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // add variables to dropdown\r\n  componentDidMount() {\r\n    var vars = [];\r\n    vars.push(<option value='RepDemDiff' key='1'>% Republican votes - % Democrat votes</option>);\r\n    vars.push(<option value='Democrat' key='2'>% votes for Democrat</option>);\r\n    vars.push(<option value='Republican' key='3'>% votes for Republican</option>);\r\n    vars.push(<option value='Other' key='5'>% votes for Other</option>);\r\n    vars.push(<option value='TotalGDP' key='6'>Total GDP (in thousands of dollars)</option>);\r\n    vars.push(<option value='GDPGrowthSince2001' key='7'>GDP Growth since 2001 (in thousands of dollars)</option>);\r\n    vars.push(<option value='GDPGrowthSinceLastElection' key='8'>GDP Growth since Last Election (in thousands of dollars)</option>);\r\n    vars.push(<option value='IndustryGDP' key='9'>Industry GDP (in thousands of dollars)</option>);\r\n    vars.push(<option value='GDPIndustryComp' key='10'>GDP Difference between Industry 1 and Industry 2 (in thousands of dollars)</option>);\r\n    \r\n    this.setState({\r\n        vars: vars\r\n    })\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      selectedVar: e.target.value\r\n    });\r\n    this.props.handleXVarChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dropdown'>\r\n        <label htmlFor='vars'>X-Variable: </label>\r\n        <select name='vars' value={this.state.selectedVar} onChange={this.handleChange}>\r\n          {this.state.vars}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class YVariableDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vars: [],\r\n      selectedVar: 'Democrat'\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // add variables to dropdown\r\n  componentDidMount() {\r\n    var vars = [];\r\n    vars.push(<option value='RepDemDiff' key='1'>% Republican votes - % Democrat votes</option>);\r\n    vars.push(<option value='Democrat' key='2'>% votes for Democrat</option>);\r\n    vars.push(<option value='Republican' key='3'>% votes for Republican</option>);\r\n    vars.push(<option value='Other' key='5'>% votes for Other</option>);\r\n    vars.push(<option value='TotalGDP' key='6'>Total GDP (in thousands of dollars)</option>);\r\n    vars.push(<option value='GDPGrowthSince2001' key='7'>GDP Growth since 2001 (in thousands of dollars)</option>);\r\n    vars.push(<option value='GDPGrowthSinceLastElection' key='8'>GDP Growth since Last Election (in thousands of dollars)</option>);\r\n    vars.push(<option value='IndustryGDP' key='9'>Industry GDP (in thousands of dollars)</option>);\r\n    vars.push(<option value='GDPIndustryComp' key='10'>GDP Difference between Industry 1 and Industry 2 (in thousands of dollars)</option>);\r\n\r\n    this.setState({\r\n        vars: vars\r\n    })\r\n  }\r\n\r\n  // handle change in state\r\n  handleChange(e) {\r\n    this.setState({\r\n      selectedVar: e.target.value\r\n    });\r\n    this.props.handleYVarChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dropdown'>\r\n        <label htmlFor='vars'>Y-Variable: </label>\r\n        <select name='vars' value={this.state.selectedVar} onChange={this.handleChange}>\r\n          {this.state.vars}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport YearDropdown from './YearDropdown';\r\nimport IndustryDropdown from './IndustryDropdown';\r\nimport XVariableDropdown from './XVariableDropdown';\r\nimport YVariableDropdown from './YVariableDropdown';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport Plotly from 'plotly.js/lib/core';\r\n\r\nimport {GRAPH_ENDPOINT as ENDPOINT} from '../App';\r\n\r\nPlotly.register([\r\n  require('plotly.js/lib/scatter')\r\n]);\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nvar fetch1Complete = false;\r\nvar fetch2Complete = false;\r\nvar fetch3Complete = false;\r\n\r\nexport default class Graph extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tdocument.title = 'Graph';\r\n\r\n\t\tthis.state = {\r\n\t\t\tyear: '2016',\r\n\t\t\t// nextYear: '2016',\r\n\t\t\tlastElectionYear: '2012',\r\n\t\t\txVar: 'Democrat',\r\n\t\t\tyVar: 'Democrat',\r\n\t\t\txQueryURL: '/dem-votes?year=2016',\r\n\t\t\tyQueryURL: '/dem-votes?year=2016',\r\n\t\t\tlabels: [],\r\n\t\t\tlocations: [],\r\n\t\t\tneedsXIndustryDropdown1: false,\r\n\t\t\tneedsXIndustryDropdown2: false,\r\n\t\t\tneedsYIndustryDropdown1: false,\r\n\t\t\tneedsYIndustryDropdown2: false,\r\n\t\t\txIndustry1: 1,\r\n\t\t\txIndustry2: 1,\r\n\t\t\tyIndustry1: 1,\r\n\t\t\tyIndustry2: 1,\r\n\t\t\txResult: [],\r\n\t\t\tyResult: [],\r\n\t\t\terrorMsg1: '',\r\n\t\t\terrorMsg2: ''\r\n\t\t};\r\n\r\n\t\tthis.handleYearChange = this.handleYearChange.bind(this);\r\n\t\tthis.handleXIndustry1Change = this.handleXIndustry1Change.bind(this);\r\n\t\tthis.handleXIndustry2Change = this.handleXIndustry2Change.bind(this);\r\n\t\tthis.handleYIndustry1Change = this.handleYIndustry1Change.bind(this);\r\n\t\tthis.handleYIndustry2Change = this.handleYIndustry2Change.bind(this);\r\n\t\tthis.handleXVarChange = this.handleXVarChange.bind(this);\r\n\t\tthis.handleYVarChange = this.handleYVarChange.bind(this);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\t// handle state change in year dropdown\r\n\thandleYearChange(newYear) {\r\n\t\tlet lastElectionYear;\r\n\t    if (newYear % 4 === 0) {\r\n\t    \tlastElectionYear = newYear - 4;\r\n\t    } else {\r\n\t    \tlastElectionYear = newYear - (newYear % 4);\r\n\t    }\r\n\r\n    \tthis.setState({\r\n      \t\tyear: newYear,\r\n      \t\tlastElectionYear: lastElectionYear\r\n    \t});\r\n  \t}\r\n\r\n\t// handle state change in x variable drowdown\r\n\thandleXVarChange(newVar) {\r\n\t\tif (newVar === 'GDPIndustryComp') {\r\n\t\t\tthis.setState({\r\n\t\t\t\txVar: newVar,\r\n\t\t   \t \tneedsXIndustryDropdown1: true,\r\n\t\t   \t \tneedsXIndustryDropdown2: true\r\n\t\t    });\r\n\t    } else if (newVar === 'IndustryGDP') {\r\n\t    \tthis.setState({\r\n\t\t\t\txVar: newVar,\r\n\t\t   \t \tneedsXIndustryDropdown1: true,\r\n\t\t   \t \tneedsXIndustryDropdown2: false,\r\n\t\t    });\r\n\t    } else {\r\n\t    \tthis.setState({\r\n\t\t\t\txVar: newVar,\r\n\t\t   \t \tneedsXIndustryDropdown1: false,\r\n\t\t   \t \tneedsXIndustryDropdown2: false\r\n\t\t    });\r\n\t    }\r\n\t}\r\n\r\n\t// handle state change in y variable drowdown\r\n\thandleYVarChange(newVar) {\r\n\t\tif (newVar === 'GDPIndustryComp') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tyVar: newVar,\r\n\t\t   \t \tneedsYIndustryDropdown1: true,\r\n\t\t   \t \tneedsYIndustryDropdown2: true\r\n\t\t    });\r\n\t    } else if (newVar === 'IndustryGDP') {\r\n\t    \tthis.setState({\r\n\t\t\t\tyVar: newVar,\r\n\t\t   \t \tneedsYIndustryDropdown1: true,\r\n\t\t   \t \tneedsYIndustryDropdown2: false,\r\n\t\t    });\r\n\t    } else {\r\n\t    \tthis.setState({\r\n\t\t\t\tyVar: newVar,\r\n\t\t   \t \tneedsYIndustryDropdown1: false,\r\n\t\t   \t \tneedsYIndustryDropdown2: false\r\n\t\t    });\r\n\t    }\r\n\t}\r\n\r\n\t// handle state change in first industry dropdown for x-axis\r\n\thandleXIndustry1Change(newIndustry) {\r\n\t\tthis.setState({\r\n\t\t\txIndustry1: newIndustry\r\n\t    });\r\n\t}\r\n\r\n\t// handle state change in second industry drowdown for x-axis\r\n\thandleXIndustry2Change(newIndustry) {\r\n\t\tthis.setState({\r\n\t\t\txIndustry2: newIndustry\r\n\t    });\r\n\t}\r\n\r\n\t// handle state change in first industry dropdown for y-axis\r\n\thandleYIndustry1Change(newIndustry) {\r\n\t\tthis.setState({\r\n\t\t\tyIndustry1: newIndustry\r\n\t    });\r\n\t}\r\n\r\n\t// handle state change in second industry dropdown for y-axis\r\n\thandleYIndustry2Change(newIndustry) {\r\n\t\tthis.setState({\r\n\t\t\tyIndustry2: newIndustry\r\n\t    });\r\n\t}\r\n\r\n\thandleClick = () => {\r\n\t\tlet xQueryURL = this.state.xQueryURL;\r\n\t    if (this.state.xVar === 'Democrat') {\r\n\t      xQueryURL = '/dem-votes?year=' + this.state.year;\r\n\t    } else if (this.state.xVar === 'Republican') {\r\n\t      xQueryURL = '/rep-votes?year=' + this.state.year;\r\n\t    } else if (this.state.xVar === 'Other') {\r\n\t      xQueryURL = '/other-votes?year=' + this.state.year;\r\n\t    } else if (this.state.xVar === 'RepDemDiff') {\r\n\t      xQueryURL = '/rep-dem-diff?year=' + this.state.year;\r\n\t    } else if (this.state.xVar === 'TotalGDP') {\r\n\t      xQueryURL = '/total-county-gdp?year=' + this.state.year;\r\n\t    } else if (this.state.xVar === 'GDPGrowthSince2001') {\r\n\t      xQueryURL = '/gdp-growth-since-2001';\r\n\t    } else if (this.state.xVar === 'GDPGrowthSinceLastElection') {\r\n\t      xQueryURL = '/gdp-growth-since-last-election?year=' + this.state.year + '&lastElectionYear=' + this.state.lastElectionYear;\r\n\t    } else if (this.state.xVar === 'GDPIndustryComp') {\r\n\t      xQueryURL = '/gdp-industry-comp?year=' + this.state.year + '&industry1=' + this.state.xIndustry1 + '&industry2=' + this.state.xIndustry2;\r\n\t    } else if (this.state.xVar === 'IndustryGDP') {\r\n\t      xQueryURL = '/industry-gdp-county?year=' + this.state.year + '&industry1=' + this.state.xIndustry1;\r\n\t    }\r\n\r\n\t    let yQueryURL = this.state.yQueryURL;\r\n\t    if (this.state.yVar === 'Democrat') {\r\n\t      yQueryURL = '/dem-votes?year=' + this.state.year;\r\n\t    } else if (this.state.yVar === 'Republican') {\r\n\t      yQueryURL = '/rep-votes?year=' + this.state.year;\r\n\t    } else if (this.state.yVar === 'Other') {\r\n\t      yQueryURL = '/other-votes?year=' + this.state.year;\r\n\t    } else if (this.state.yVar === 'RepDemDiff') {\r\n\t      yQueryURL = '/rep-dem-diff?year=' + this.state.year;\r\n\t    } else if (this.state.yVar === 'TotalGDP') {\r\n\t      yQueryURL = '/total-county-gdp?year=' + this.state.year;\r\n\t    } else if (this.state.yVar === 'GDPGrowthSince2001') {\r\n\t      yQueryURL = '/gdp-growth-since-2001';\r\n\t    } else if (this.state.yVar === 'GDPGrowthSinceLastElection') {\r\n\t      yQueryURL = '/gdp-growth-since-last-election?year=' + this.state.year + '&lastElectionYear=' + this.state.lastElectionYear;\r\n\t    } else if (this.state.yVar === 'GDPIndustryComp') {\r\n\t      yQueryURL = '/gdp-industry-comp?year=' + this.state.year + '&industry1=' + this.state.yIndustry1 + '&industry2=' + this.state.yIndustry2;\r\n\t    } else if (this.state.yVar === 'IndustryGDP') {\r\n\t      yQueryURL = '/industry-gdp-county?year=' + this.state.year + '&industry1=' + this.state.yIndustry1;\r\n\t    }\r\n\r\n\t\tlet electionYears = ['2000', '2004', '2008', '2012', '2016'];\r\n\t    if ((this.state.xVar) === 'TotalGDP' || (this.state.xVar === 'GDPGrowthSince2001') || (this.state.xVar === 'GDPGrowthSinceLastElection') || (this.state.xVar === 'GDPIndustryComp') || (this.state.xVar === 'IndustryGDP') ||\r\n\t     (this.state.yVar === 'TotalGDP') || (this.state.yVar === 'GDPGrowthSince2001') || (this.state.yVar === 'GDPGrowthSinceLastElection') || (this.state.yVar === 'GDPIndustryComp') || (this.state.yVar === 'IndustryGDP')) {\r\n\t\t      if (this.state.year < 2005) {\r\n\t\t      \tif (this.state.year === '2000') {\r\n\t\t\t        this.setState({\r\n\t\t\t          errorMsg1: 'GDP data is not available for the year 2000'\r\n\t\t\t        });\r\n\t\t\t    } else if ((this.state.xVar === 'GDPGrowthSinceLastElection') || (this.state.yVar === 'GDPGrowthSinceLastElection')) {\r\n\t\t      \t\tthis.setState({\r\n\t\t      \t\t\terrorMsg1: 'GDP data is not available for the year 2000 (the last election year)'\r\n\t\t      \t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terrorMsg1: ''\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t      } else {\r\n\t\t\t      \tthis.setState({\r\n\t\t\t\t\t\terrorMsg1: ''\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t    } else {\r\n\t    \tthis.setState({\r\n\t    \t\terrorMsg1: ''\r\n\t\t\t});\r\n\t    }\r\n\r\n\t    if ((this.state.xVar === 'Democrat') || (this.state.xVar === 'Republican') || (this.state.xVar === 'Other') || (this.state.xVar === 'RepDemDiff') ||\r\n\t    \t(this.state.yVar === 'Democrat') || (this.state.yVar === 'Republican') || (this.state.yVar === 'Other') || (this.state.yVar === 'RepDemDiff')) {\r\n\t\t    if (!electionYears.includes(this.state.year)) {\r\n\t\t        this.setState({\r\n\t\t          errorMsg2: 'Election data is not available for the year ' + this.state.year\r\n\t\t        });\r\n\t\t    } else {\r\n\t\t      \tthis.setState({\r\n\t\t          errorMsg2: ''\r\n\t\t        });\r\n\t\t    }\r\n\t    } else {\r\n\t    \tthis.setState({\r\n\t    \t\terrorMsg2: ''\r\n\t\t\t});\r\n\t    }\r\n\r\n\t    this.setState({\r\n\t    \txQueryURL: xQueryURL,\r\n\t    \tyQueryURL: yQueryURL\r\n\t    }, function() {\r\n\t    \treturn this.componentDidMount();\r\n\t    });\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tvar xarr = [];\r\n\t\tvar yarr = [];\r\n\t\tvar labelsArr = [];\r\n\t\tvar locationsArr = [];\r\n\r\n\t\tfetch(ENDPOINT.concat(this.state.xQueryURL))\r\n            .then(res => res.json())\r\n            .then(\r\n            \t(result) => {\r\n    \t\t      \txarr = result.map((rowObj, i) => rowObj.Z);\r\n    \t\t      \tfetch1Complete = true;\r\n            \t\tthis.setState({\r\n            \t\t\txResult: xarr\r\n            \t\t});\r\n            \t},\r\n            \t(error) => {\r\n            \t\tthis.setState({\r\n            \t\t\terror\r\n            \t\t});\r\n            \t}\r\n            )\r\n\r\n        fetch(ENDPOINT.concat(this.state.yQueryURL))\r\n            .then(res => res.json())\r\n            .then(\r\n            \t(result) => {\r\n    \t\t      \tyarr = result.map((rowObj, i) => rowObj.Z);\r\n    \t\t      \tfetch2Complete = true;\r\n            \t\tthis.setState({\r\n            \t\t\tyResult: yarr\r\n            \t\t});\r\n            \t},\r\n            \t(error) => {\r\n            \t\tthis.setState({\r\n            \t\t\terror\r\n            \t\t});\r\n            \t}\r\n            )\r\n\r\n        fetch(ENDPOINT.concat('/counties'))\r\n            .then(res => res.json())\r\n            .then(\r\n            \t(result) => {\r\n\t                labelsArr = result.map((rowObj, i) => rowObj.Z);\r\n\t                locationsArr = result.map((rowObj, i) => rowObj.FIPS);\r\n\t                fetch3Complete = true;\r\n            \t\tthis.setState({\r\n            \t\t\tlabels: labelsArr,\r\n            \t\t\tlocations: locationsArr\r\n            \t\t});\r\n            \t},\r\n            \t(error) => {\r\n            \t\tthis.setState({\r\n            \t\t\terror\r\n            \t\t});\r\n            \t}\r\n            )\r\n    }\r\n\r\n\trender() {\r\n\t\tlet XIndustryDropdown1;\r\n\t\tlet XIndustryDropdown2;\r\n\t\tif (this.state.needsXIndustryDropdown1) {\r\n\t\t\tXIndustryDropdown1 = <IndustryDropdown\r\n            \t\t\t\t\tid='x-industry-dropdown'\r\n           \t\t\t\t\t\thandleIndustryChange={this.handleXIndustry1Change}/>;\r\n\t\t}\r\n\t\tif (this.state.needsXIndustryDropdown2) {\r\n\t\t\tXIndustryDropdown2 = <IndustryDropdown\r\n            \t\t\t\t\tid='x-industry-dropdown'\r\n           \t\t\t\t\t\thandleIndustryChange={this.handleXIndustry2Change}/>;\r\n\t\t}\r\n\r\n\t\tlet YIndustryDropdown1;\r\n\t\tlet YIndustryDropdown2;\r\n\t\tif (this.state.needsYIndustryDropdown1) {\r\n\t\t\tYIndustryDropdown1 = <IndustryDropdown\r\n            \t\t\t\t\tid='y-industry-dropdown'\r\n           \t\t\t\t\t\thandleIndustryChange={this.handleYIndustry1Change}/>;\r\n\t\t}\r\n\t\tif (this.state.needsYIndustryDropdown2) {\r\n\t\t\tYIndustryDropdown2 = <IndustryDropdown\r\n            \t\t\t\t\tid='y-industry-dropdown'\r\n           \t\t\t\t\t\thandleIndustryChange={this.handleYIndustry2Change}/>;\r\n\t\t}\r\n\r\n\t\tlet finalXResult;\r\n\t\tlet finalYResult;\r\n\t\tlet finalLabels;\r\n\t\tlet finalLocations;\r\n\t\tif ((fetch1Complete) && (fetch2Complete) && (fetch3Complete)){\r\n\t\t\tfinalXResult = this.state.xResult;\r\n\t\t\tfinalYResult = this.state.yResult;\r\n\t\t\tfinalLabels = this.state.labels;\r\n\t\t\tfinalLocations = this.state.locations;\r\n\t\t\tfetch1Complete = false;\r\n\t\t\tfetch2Complete = false;\r\n\t\t\tfetch3Complete =  false;\r\n\t\t}\r\n\r\n\t\tlet dimension = Math.min(document.documentElement.clientWidth, document.documentElement.clientHeight) * 0.8;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='page'>\r\n\t\t\t\t<section className='graph'>\r\n\t\t\t\t\t<Plot\r\n\t\t\t\t        data={[\r\n\t\t\t\t          {\r\n\t\t\t\t            x: finalXResult,\r\n\t\t\t\t            y: finalYResult,\r\n\t\t\t\t            type: 'scatter',\r\n\t\t\t\t            mode: 'markers',\r\n\t\t\t\t            marker: {color: 'blue'},\r\n\t\t\t\t            text: finalLabels,\r\n\t\t\t\t            customdata: finalLocations\r\n\t\t\t\t          }\r\n\t\t\t\t        ]}\r\n\t\t\t\t        layout={ {width: dimension, height: dimension, hovermode: 'closest'} }\r\n\t\t\t\t        onClick = {(data) => {\r\n\t\t\t\t          window.location.href = process.env.PUBLIC_URL + '/county/' + data.points[0].customdata + '#county-profile';\r\n\t\t\t\t        }}\r\n\t\t\t\t    />\r\n\t\t\t    </section>\r\n\t\t\t    <section className='scatterSelector'>\r\n\t          \t\t<p className='error'>{this.state.errorMsg1 + \"\\n\"}</p>\r\n\t          \t\t<p className='error'>{this.state.errorMsg2}</p>\r\n\t          \t\t<YearDropdown\r\n\t            \t\tid='year-dropdown'\r\n\t           \t\t\thandleYearChange={this.handleYearChange}\r\n\t          \t\t/>\r\n\t          \t\t<XVariableDropdown\r\n\t          \t\t\tid='variable-dropdown'\r\n\t          \t\t\thandleXVarChange={this.handleXVarChange}\r\n\t          \t\t\tincludeCategorical={true}\r\n\t          \t\t/>\r\n\t          \t\t{XIndustryDropdown1}\r\n\t          \t\t{XIndustryDropdown2}\r\n\t          \t\t<YVariableDropdown\r\n\t          \t\t\tid='variable-dropdown'\r\n\t          \t\t\thandleYVarChange={this.handleYVarChange}\r\n\t          \t\t\tincludeCategorical={true}\r\n\t          \t\t/>\r\n\t          \t\t{YIndustryDropdown1}\r\n\t          \t\t{YIndustryDropdown2}\r\n          \t\t</section>\r\n          \t\t<button id='submit' onClick={this.handleClick}>Submit</button>\r\n\t\t    </div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport YearDropdown from './YearDropdown';\r\nimport IndustryDropdown from './IndustryDropdown';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport Plotly from 'plotly.js/lib/core';\r\n\r\nimport {GRAPH_ENDPOINT as ENDPOINT} from '../App';\r\n\r\nPlotly.register([\r\n  require('plotly.js/lib/bar')\r\n]);\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport default class Graph extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tdocument.title = 'Graph';\r\n\r\n\t\tthis.state = {\r\n\t\t\tyear1: '2016',\r\n\t\t\tyear2: '2016',\r\n\t\t\tyear3: '2016',\r\n\t\t\tyQueryURL: '/bar-industry-gdp?year1=2016&year2=2016&year3=2016&industry1=1&industry2=1&industry3=1',\r\n\t\t\tindustry1: '1',\r\n\t\t\tindustry2: '1',\r\n\t\t\tindustry3: '1',\r\n\t\t\tindustry1String: 'Private industries, 2016',\r\n\t\t\tindustry2String: 'Private industries, 2016',\r\n\t\t\tindustry3String: 'Private industries, 2016',\r\n\t\t\txResult: ['Private industries, 2016','Private industries, 2016 ','Private industries, 2016  '],\r\n\t\t\tyResult: [],\r\n\t\t\terrorMsg1: '',\r\n\t\t\terrorMsg2: '',\r\n\t\t\terrorMsg3: ''\r\n\t\t};\r\n\r\n\t\tthis.handleYear1Change = this.handleYear1Change.bind(this);\r\n\t\tthis.handleYear2Change = this.handleYear2Change.bind(this);\r\n\t\tthis.handleYear3Change = this.handleYear3Change.bind(this);\r\n\t\tthis.handleIndustry1Change = this.handleIndustry1Change.bind(this);\r\n\t\tthis.handleIndustry2Change = this.handleIndustry2Change.bind(this);\r\n\t\tthis.handleIndustry3Change = this.handleIndustry3Change.bind(this);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\t// handle state change in first year dropdown\r\n\thandleYear1Change(newYear) {\r\n    \tthis.setState({\r\n      \t\tyear1: newYear\r\n    \t});\r\n  \t}\r\n\r\n  \t// handle state change in second year dropdown\r\n\thandleYear2Change(newYear) {\r\n    \tthis.setState({\r\n      \t\tyear2: newYear\r\n    \t});\r\n  \t}\r\n\r\n  \t// handle state change in third year dropdown\r\n\thandleYear3Change(newYear) {\r\n    \tthis.setState({\r\n      \t\tyear3: newYear\r\n    \t});\r\n  \t}\r\n\r\n\t// handle state change in first industry drowdown\r\n\thandleIndustry1Change(newIndustry) {\r\n\t\tthis.setState({\r\n\t\t\tindustry1: newIndustry\r\n\t    });\r\n\t}\r\n\r\n\t// handle state change in second industry drowdown\r\n\thandleIndustry2Change(newIndustry) {\r\n\t\tthis.setState({\r\n\t\t\tindustry2: newIndustry\r\n\t    });\r\n\t}\r\n\r\n\t// handle state change in third industry drowdown\r\n\thandleIndustry3Change(newIndustry) {\r\n\t\tthis.setState({\r\n\t\t\tindustry3: newIndustry\r\n\t    });\r\n\t}\r\n\r\n\thandleClick = () => {\r\n\r\n\t\tlet industry1String = this.state.industry1String;\r\n\r\n\t\tif (this.state.industry1 === '1') {\r\n\t\t\tindustry1String = 'Private industries, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '2') {\r\n\t\t\tindustry1String = 'Agriculture, forestry, fishing and hunting, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '3') {\r\n\t\t\tindustry1String = 'Mining, quarrying, and oil and gas extraction, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '4') {\r\n\t\t\tindustry1String = 'Utilities, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '5') {\r\n\t\t\tindustry1String = 'Construction, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '6') {\r\n\t\t\tindustry1String = 'Manufacturing, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '7') {\r\n\t\t\tindustry1String = 'Durable goods manufacturing, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '8') {\r\n\t\t\tindustry1String = 'Nondurable goods manufacturing, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '9') {\r\n\t\t\tindustry1String = 'Wholesale trade, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '10') {\r\n\t\t\tindustry1String = 'Retail trade, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '11') {\r\n\t\t\tindustry1String = 'Transportation, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '12') {\r\n\t\t\tindustry1String = 'Information, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '13') {\r\n\t\t\tindustry1String = 'Finance, insurance, real estate, rental, and leasing, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '14') {\r\n\t\t\tindustry1String = 'Finance and insurance, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '15') {\r\n\t\t\tindustry1String = 'Real estate and rental and leasing, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '16') {\r\n\t\t\tindustry1String = 'Professional and business services, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '17') {\r\n\t\t\tindustry1String = 'Professional, scientific, and technical services, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '18') {\r\n\t\t\tindustry1String = 'Management of companies and enterprises, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '19') {\r\n\t\t\tindustry1String = 'Administrative and support and waste management and remediation services, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '20') {\r\n\t\t\tindustry1String = 'Educational services, health care, and social assistance, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '21') {\r\n\t\t\tindustry1String = 'Educational services, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '22') {\r\n\t\t\tindustry1String = 'Health care and social assistance, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '23') {\r\n\t\t\tindustry1String = 'Arts, entertainment, recreation, accommodation, and food services, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '24') {\r\n\t\t\tindustry1String = 'Arts, entertainment, and recreation, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '25') {\r\n\t\t\tindustry1String = 'Accommodation and food services, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '26') {\r\n\t\t\tindustry1String = 'Other services (except government and government enterprises), ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '27') {\r\n\t\t\tindustry1String = 'Government and government enterprises, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '28') {\r\n\t\t\tindustry1String = 'Natural resources and mining, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '29') {\r\n\t\t\tindustry1String = 'Trade, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '30') {\r\n\t\t\tindustry1String = 'Transportation and utilities, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '31') {\r\n\t\t\tindustry1String = 'Manufacturing and information, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '32') {\r\n\t\t\tindustry1String = 'Private goods-producing industries 2, ' + this.state.year1;\r\n\t\t} else if (this.state.industry1 === '33') {\r\n\t\t\tindustry1String = 'Private services-providing industries 3, ' + this.state.year1;\r\n\t\t}\r\n\r\n\t\tlet industry2String = this.industry2String;\r\n\r\n\t\tif (this.state.industry2 === '1') {\r\n\t\t\tindustry2String = 'Private industries, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '2') {\r\n\t\t\tindustry2String = 'Agriculture, forestry, fishing and hunting, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '3') {\r\n\t\t\tindustry2String = 'Mining, quarrying, and oil and gas extraction, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '4') {\r\n\t\t\tindustry2String = 'Utilities, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '5') {\r\n\t\t\tindustry2String = 'Construction, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '6') {\r\n\t\t\tindustry2String = 'Manufacturing, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '7') {\r\n\t\t\tindustry2String = 'Durable goods manufacturing, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '8') {\r\n\t\t\tindustry2String = 'Nondurable goods manufacturing, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '9') {\r\n\t\t\tindustry2String = 'Wholesale trade, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '10') {\r\n\t\t\tindustry2String = 'Retail trade, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '11') {\r\n\t\t\tindustry2String = 'Transportation, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '12') {\r\n\t\t\tindustry2String = 'Information, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '13') {\r\n\t\t\tindustry2String = 'Finance, insurance, real estate, rental, and leasing, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '14') {\r\n\t\t\tindustry2String = 'Finance and insurance, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '15') {\r\n\t\t\tindustry2String = 'Real estate and rental and leasing, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '16') {\r\n\t\t\tindustry2String = 'Professional and business services, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '17') {\r\n\t\t\tindustry2String = 'Professional, scientific, and technical services, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '18') {\r\n\t\t\tindustry2String = 'Management of companies and enterprises, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '19') {\r\n\t\t\tindustry2String = 'Administrative and support and waste management and remediation services, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '20') {\r\n\t\t\tindustry2String = 'Educational services, health care, and social assistance, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '21') {\r\n\t\t\tindustry2String = 'Educational services, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '22') {\r\n\t\t\tindustry2String = 'Health care and social assistance, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '23') {\r\n\t\t\tindustry2String = 'Arts, entertainment, recreation, accommodation, and food services, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '24') {\r\n\t\t\tindustry2String = 'Arts, entertainment, and recreation, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '25') {\r\n\t\t\tindustry2String = 'Accommodation and food services, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '26') {\r\n\t\t\tindustry2String = 'Other services (except government and government enterprises), ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '27') {\r\n\t\t\tindustry2String = 'Government and government enterprises, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '28') {\r\n\t\t\tindustry2String = 'Natural resources and mining, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '29') {\r\n\t\t\tindustry2String = 'Trade, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '30') {\r\n\t\t\tindustry2String = 'Transportation and utilities, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '31') {\r\n\t\t\tindustry2String = 'Manufacturing and information, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '32') {\r\n\t\t\tindustry2String = 'Private goods-producing industries 2, ' + this.state.year2;\r\n\t\t} else if (this.state.industry2 === '33') {\r\n\t\t\tindustry2String = 'Private services-providing industries 3, ' + this.state.year2;\r\n\t\t}\r\n\r\n\t\tlet industry3String = this.industry3String;\r\n\r\n\t\tif (this.state.industry3 === '1') {\r\n\t\t\tindustry3String = 'Private industries, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '2') {\r\n\t\t\tindustry3String = 'Agriculture, forestry, fishing and hunting, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '3') {\r\n\t\t\tindustry3String = 'Mining, quarrying, and oil and gas extraction, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '4') {\r\n\t\t\tindustry3String = 'Utilities, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '5') {\r\n\t\t\tindustry3String = 'Construction, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '6') {\r\n\t\t\tindustry3String = 'Manufacturing, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '7') {\r\n\t\t\tindustry3String = 'Durable goods manufacturing, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '8') {\r\n\t\t\tindustry3String = 'Nondurable goods manufacturing, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '9') {\r\n\t\t\tindustry3String = 'Wholesale trade, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '10') {\r\n\t\t\tindustry3String = 'Retail trade, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '11') {\r\n\t\t\tindustry3String = 'Transportation, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '12') {\r\n\t\t\tindustry3String = 'Information, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '13') {\r\n\t\t\tindustry3String = 'Finance, insurance, real estate, rental, and leasing, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '14') {\r\n\t\t\tindustry3String = 'Finance and insurance, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '15') {\r\n\t\t\tindustry3String = 'Real estate and rental and leasing, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '16') {\r\n\t\t\tindustry3String = 'Professional and business services, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '17') {\r\n\t\t\tindustry3String = 'Professional, scientific, and technical services, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '18') {\r\n\t\t\tindustry3String = 'Management of companies and enterprises, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '19') {\r\n\t\t\tindustry3String = 'Administrative and support and waste management and remediation services, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '20') {\r\n\t\t\tindustry3String = 'Educational services, health care, and social assistance, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '21') {\r\n\t\t\tindustry3String = 'Educational services, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '22') {\r\n\t\t\tindustry3String = 'Health care and social assistance, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '23') {\r\n\t\t\tindustry3String = 'Arts, entertainment, recreation, accommodation, and food services, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '24') {\r\n\t\t\tindustry3String = 'Arts, entertainment, and recreation, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '25') {\r\n\t\t\tindustry3String = 'Accommodation and food services, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '26') {\r\n\t\t\tindustry3String = 'Other services (except government and government enterprises), ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '27') {\r\n\t\t\tindustry3String = 'Government and government enterprises, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '28') {\r\n\t\t\tindustry3String = 'Natural resources and mining, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '29') {\r\n\t\t\tindustry3String = 'Trade, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '30') {\r\n\t\t\tindustry3String = 'Transportation and utilities, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '31') {\r\n\t\t\tindustry3String = 'Manufacturing and information, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '32') {\r\n\t\t\tindustry3String = 'Private goods-producing industries 2, ' + this.state.year3;\r\n\t\t} else if (this.state.industry3 === '33') {\r\n\t\t\tindustry3String = 'Private services-providing industries 3, ' + this.state.year3;\r\n\t\t}\r\n\r\n\t\tif (this.state.year1 === '2000') {\r\n\t        this.setState({\r\n\t          errorMsg1: 'GDP data is not available for the year 2000'\r\n\t        });\r\n\t      } else {\r\n\t      \tthis.setState({\r\n\t          errorMsg1: ''\r\n\t        });\r\n\t    }\r\n\r\n\t    if (this.state.year2 === '2000') {\r\n\t        this.setState({\r\n\t          errorMsg2: 'GDP data is not available for the year 2000'\r\n\t        });\r\n\t      } else {\r\n\t      \tthis.setState({\r\n\t          errorMsg2: ''\r\n\t        });\r\n\t    }\r\n\r\n\t    if (this.state.year3 === '2000') {\r\n\t        this.setState({\r\n\t          errorMsg3: 'GDP data is not available for the year 2000'\r\n\t        });\r\n\t      } else {\r\n\t      \tthis.setState({\r\n\t          errorMsg3: ''\r\n\t        });\r\n\t    }\r\n\r\n\r\n\t\tlet yQueryURL = '/bar-industry-gdp?year1=' + this.state.year1 + '&year2=' + this.state.year2 + '&year3=' + this.state.year3 + '&industry1=' + this.state.industry1 + '&industry2=' + this.state.industry2 + '&industry3=' + this.state.industry3;\r\n\r\n\t    this.setState({\r\n\t    \tyQueryURL: yQueryURL,\r\n\t    \tindustry1String: industry1String,\r\n\t    \tindustry2String: industry2String,\r\n\t    \tindustry3String: industry3String,\r\n\t    \txResult: [industry1String, industry2String + ' ', industry3String + '  ']\r\n\t    }, function() {\r\n\t    \treturn this.componentDidMount();\r\n\t    });\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tvar yarr = [];\r\n\r\n        fetch(ENDPOINT.concat(this.state.yQueryURL))\r\n            .then(res => res.json())\r\n            .then(\r\n            \t(result) => {\r\n    \t\t      \tyarr = result.map((rowObj, i) => rowObj.Z);\r\n            \t\tthis.setState({\r\n            \t\t\tyResult: yarr\r\n            \t\t});\r\n            \t},\r\n            \t(error) => {\r\n            \t\tthis.setState({\r\n            \t\t\terror\r\n            \t\t});\r\n            \t}\r\n            )\r\n    }\r\n\r\n\trender() {\r\n\t\tlet dimension = Math.min(document.documentElement.clientWidth, document.documentElement.clientHeight) * 0.8;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='page'>\r\n\t\t\t\t<section className='graph'>\r\n\t\t\t\t\t<Plot\r\n\t\t\t\t        data={[\r\n\t\t\t\t          {\r\n\t\t\t\t            x: this.state.xResult,\r\n\t\t\t\t            y: this.state.yResult,\r\n\t\t\t\t            type: 'bar',\r\n\t\t\t\t            mode: 'markers',\r\n\t\t\t\t            marker: {color: 'blue'},\r\n\t\t\t\t          }\r\n\t\t\t\t        ]}\r\n\t\t\t\t        layout={ {\r\n\t\t\t\t        \twidth: dimension,\r\n\t\t\t\t        \theight: dimension,\r\n\t\t\t\t        \ttitle: 'Total GDP By Industry (in thousands of dollars)',\r\n\t\t\t\t        \txaxis: {\r\n\t\t\t\t        \t\tautomargin: true\r\n\t\t\t\t        \t}\r\n\t\t\t\t        } }\r\n\t\t\t\t    />\r\n\t\t\t    </section>\r\n\r\n\t\t\t    <section className='barSelector'>\r\n\t          \t\t<IndustryDropdown\r\n\t\t\t\t\t\tid='industry-dropdown-1'\r\n\t\t\t\t\t\thandleIndustryChange={this.handleIndustry1Change}\r\n\t           \t\t/>\r\n\t\t\t\t    <YearDropdown\r\n\t            \t\tid='year-dropdown-1'\r\n\t           \t\t\thandleYearChange={this.handleYear1Change}\r\n\t          \t\t/>\r\n\t          \t\t<p className='error'>{this.state.errorMsg1}</p>\r\n          \t\t</section>\r\n\r\n          \t\t<section className='barSelector'>\r\n\t           \t\t<IndustryDropdown\r\n\t\t\t\t\t\tid='industry-dropdown-2'\r\n\t\t\t\t\t\thandleIndustryChange={this.handleIndustry2Change}\r\n\t           \t\t/>\r\n\t           \t\t<YearDropdown\r\n\t            \t\tid='year-dropdown-2'\r\n\t           \t\t\thandleYearChange={this.handleYear2Change}\r\n\t          \t\t/>\r\n\t          \t\t<p className='error'>{this.state.errorMsg2}</p>\r\n          \t\t</section>\r\n\r\n          \t\t<section className='barSelector'>\r\n\t           \t\t<IndustryDropdown\r\n\t\t\t\t\t\tid='industry-dropdown-3'\r\n\t\t\t\t\t\thandleIndustryChange={this.handleIndustry3Change}\r\n\t           \t\t/>\r\n\t          \t\t<YearDropdown\r\n\t            \t\tid='year-dropdown-3'\r\n\t           \t\t\thandleYearChange={this.handleYear3Change}\r\n\t          \t\t/>\r\n\t          \t\t<p className='error'>{this.state.errorMsg3}</p>\r\n          \t\t</section>\r\n\r\n          \t\t<button id='submit' onClick={this.handleClick}>Submit</button>\r\n\t\t    </div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { useState } from 'react';\r\nimport ScatterGraph from './ScatterGraph';\r\nimport BarGraph from './BarGraph';\r\nimport './Graph.css';\r\n\r\n/**\r\n * Display Trending page\r\n */\r\nfunction Graph() {\r\n\r\n  const [granularity, setGranularity] = useState(null);\r\n\r\n  document.title = `Graph`;\r\n\r\n  let graphChoice;\r\n  if (granularity === \"Scatter\") {\r\n    graphChoice = <ScatterGraph />;\r\n  } else if (granularity === \"Bar\") {\r\n    graphChoice = <BarGraph />;\r\n  }\r\n  return(\r\n    <div id=\"GraphPage\">\r\n      <button onClick={() => setGranularity(\"Scatter\")}>Scatterplot</button>\r\n      <button onClick={() => setGranularity(\"Bar\")}>Bar Graph</button>\r\n      {graphChoice}\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Graph;\r\n","/*\r\n * Api for getting data for trends page\r\n */\r\n\r\nimport {MAP_ENDPOINT, COUNTY_ENDPOINT, TRENDS_ENDPOINT as ENDPOINT} from '../App';\r\n\r\nlet ERR_HANDLER = (err) => {\r\n    console.log(err)\r\n};\r\n/**\r\n * Get all states \r\n */\r\nexport function getStates() {\r\n    return fetch(ENDPOINT.concat(`/state`))\r\n            .then(res => {\r\n                return res.json();\r\n            }, ERR_HANDLER);\r\n}\r\n/**\r\n * Given a state, get election results\r\n * @param  {} state - 2 letter state abbreviation\r\n */\r\nexport function getStateElectionResult(state) {\r\n    return fetch(ENDPOINT.concat(`/state-election?state=${state}`))\r\n            .then(res => {\r\n                return res.json();\r\n            }, ERR_HANDLER);\r\n}\r\n/**\r\n * get national election results\r\n */\r\nexport function getNationalElectionResult() {\r\n    return fetch(ENDPOINT.concat(`/national-election`))\r\n            .then(res => {\r\n                return res.json();\r\n            }, ERR_HANDLER);\r\n}\r\n\r\n/**\r\n * get county GDP data\r\n * @param {} fips - county fips code\r\n */\r\nexport function getCountyGDPData(fips) {\r\n    return fetch(COUNTY_ENDPOINT.concat(`/annual-gdp?fips=${fips}`))\r\n            .then(res => {\r\n                return res.json();\r\n            });\r\n}\r\n\r\n/**\r\n * get state GDP data\r\n * @param {} state - state abbreviation\r\n */\r\nexport function getStateGDPData(state) {\r\n    return fetch(ENDPOINT.concat(`/state-gdp?state=${state}`))\r\n            .then(res => {\r\n                return res.json();\r\n            });\r\n}\r\n\r\n/**\r\n * get national GDP data\r\n */\r\nexport function getNationalGDPData() {\r\n    return fetch(ENDPOINT.concat(`/national-gdp`))\r\n            .then(res => {\r\n                return res.json();\r\n            });\r\n}\r\n\r\nexport function getIndustries() {\r\n    return fetch(MAP_ENDPOINT.concat(`/industries`))\r\n            .then(res => {\r\n                return res.json();\r\n            });\r\n}\r\n\r\nexport function getCountyIndustryGDP(fips, industry) {\r\n    return fetch(ENDPOINT.concat(`/county-industry?fips=${fips}&industry=${industry}`))\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n}\r\n\r\nexport function getStateIndustryGDP(state, industry) {\r\n    return fetch(ENDPOINT.concat(`/state-industry?state=${state}&industry=${industry}`))\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n}\r\n\r\nexport function getNationalIndustryGDP(industry) {\r\n    return fetch(ENDPOINT.concat(`/national-industry?industry=${industry}`))\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n}\r\n","import React from 'react';\r\nimport Chart from \"react-google-charts\";\r\n/**\r\n * Display a graph of election data\r\n * @param  {} props ElectionData object\r\n */\r\nfunction ElectionGraph(props) {\r\n    \r\n    if (!props.data || props.data.length === 0) {\r\n        return (\r\n            <div id=\"ElectionGraph\">No election data found.</div>\r\n        )\r\n    }\r\n    \r\n\r\n    let formattedData = [['Year', 'Democrat Votes', 'Republican Votes']];\r\n    for (let election of props.data) {\r\n        formattedData.push([election.Year, election.DemVote, election.RepVote]);\r\n    }\r\n\r\n    return(\r\n        <div id=\"ElectionGraph\">\r\n            <Chart\r\n                chartType=\"AreaChart\"\r\n                loader={<div>Loading Election Data</div>}\r\n                data={formattedData}\r\n                options= {{\r\n                    title: 'Election Trends',\r\n                    vAxis: {title: 'Votes'},\r\n                    hAxis: {title: 'Year', format: '####', ticks: [2000, 2004, 2008, 2012, 2016], textStyle: {fontSize: 12}},\r\n                    chartArea: {width: '60%', height: '70%'},\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ElectionGraph;","import React from 'react';\r\nimport Chart from \"react-google-charts\";\r\n\r\n/**\r\n * Display a graph of gdp data\r\n * @param  {} props gdpdata\r\n */\r\n\r\nfunction GDPGraph(props) {\r\n\r\n    if (!props.gdpData || props.gdpData.length === 0) {\r\n        return (\r\n            <div id=\"GDPGraph\">No GDP data found.</div>\r\n        )\r\n    }\r\n\r\n    let formattedData = [['Year', 'GDP (millions of dollars)']];\r\n    for (let entry of props.gdpData) {\r\n        formattedData.push([entry.YEAR, entry.GDP]);\r\n    }\r\n    \r\n\r\n    return(\r\n        <div id=\"GDPGraph\">\r\n            <Chart \r\n                chartType=\"LineChart\" \r\n                loader={<div>Loading GDP Data</div>}\r\n                data={formattedData}\r\n                options={{\r\n                    title: 'GDP Trends',\r\n                    vAxis: {title: 'GDP (millions of dollars)'},\r\n                    hAxis: {title: 'Year', format: '####', ticks: [2000, 2004, 2008, 2012, 2016], textStyle: {fontSize: 12}},\r\n                    chartArea: {width: '60%', height: '70%'},\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GDPGraph;","import React, { useEffect, useState } from 'react';\r\nimport { getIndustries } from './TrendsApi';\r\n\r\n/**\r\n * \r\n * @param { handleUpdate} props \r\n * handleUpdate : callback for when industry state changes\r\n */\r\n export function IndustrySelector(props) {\r\n\r\n    const [industry, setIndustry] = useState(null);\r\n    const [industries, setIndustries] = useState(null);\r\n\r\n    let updateIndustry = props.handleUpdate;\r\n\r\n    useEffect(() => {\r\n        updateIndustry(industry);\r\n            // populate our industry list to render\r\n        let industryList = [];\r\n        getIndustries().then(data => {\r\n            for (let entry of data) {\r\n                industryList.push(<option key={entry.INDUSTRY_ID } value={entry.INDUSTRY_ID}>{entry.NAME}</option>);\r\n            }\r\n            setIndustries(industryList);\r\n        })\r\n    }, [industry, updateIndustry]);\r\n\r\n\r\n\r\n    return (\r\n        <div className='dropdown'>\r\n            <label htmlFor='industry'>Choose an industry: </label>\r\n            <select name='industry' value={industry || \"\"} onChange={e => setIndustry(e.target.value)}>\r\n                {industries}\r\n            </select>\r\n        </div>\r\n    );\r\n }","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction IndustryGraph(props) {\r\n\r\n    if (!props.gdp || !props.industryGDP || props.gdp.length !== props.industryGDP.length) {\r\n        return (\r\n            <div id=\"IndustryGraph\">No industry data found.</div>\r\n        )\r\n    }\r\n\r\n    let rawIndustryGDPdata = [['Year', 'industryGDP (millions of dollars)']];\r\n    let proportionalGDPdata = [['Year', 'fraction of total GDP']];\r\n    for (let i = 0; i < props.gdp.length; i++) {\r\n        let industry = props.industryGDP[i];\r\n        let gdp = props.gdp[i];\r\n        // skip this entry if years don't match\r\n        if (industry.year !== gdp.year) continue;\r\n        let proportion = parseFloat(industry.GDP) / parseFloat(gdp.GDP);\r\n        // validate that years match and proportion calculations are correct\r\n        if (!isNaN(proportion)) {\r\n            rawIndustryGDPdata.push([industry.YEAR, industry.GDP]);\r\n            proportionalGDPdata.push([industry.YEAR, proportion ]);\r\n        }\r\n    }\r\n\r\n    if (rawIndustryGDPdata.length === 1) {\r\n        return(\r\n            <div id=\"IndustryGraph\">\r\n                No industry GDP data found.\r\n            </div>\r\n        );\r\n    } \r\n\r\n    return(\r\n        <div id=\"IndustryGraph\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                <Chart\r\n                    chartType=\"LineChart\"\r\n                    loader={<div>Loading Industry GDP data</div>}\r\n                    data={rawIndustryGDPdata}\r\n                    options={{\r\n                        title: 'Industry GDP Trends',\r\n                        vAxis: {title: 'GDP (millions of dollars)'},\r\n                        hAxis: {title: 'Year', format: '####', ticks: [2000, 2004, 2008, 2012, 2016], textStyle: {fontSize: 12}},\r\n                        chartArea: {width: '60%', height: '70%'},\r\n                    }}\r\n                />\r\n                </div>\r\n            </div>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                <Chart\r\n                    chartType=\"LineChart\"\r\n                    loader={<div>Loading Industry GDP data</div>}\r\n                    data={proportionalGDPdata}\r\n                    options={{\r\n                        vAxis: {title: 'fraction of total GDP'},\r\n                        hAxis: {title: 'Year', format: '####', ticks: [2000, 2004, 2008, 2012, 2016], textStyle: {fontSize: 12}},\r\n                        chartArea: {width: '60%', height: '70%'},\r\n                    }}\r\n                />\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default IndustryGraph;","import React from 'react';\r\nimport { IndustrySelector } from './IndustrySelector';\r\nimport IndustryGraph from './IndustryGraph';\r\n\r\n/**\r\n * \r\n * @param {*} props \r\n */\r\nexport function IndustryPanel(props) {\r\n\r\n    if (!props.industry) {\r\n        return(\r\n            <div id=\"industrypanel\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                    <IndustrySelector handleUpdate={props.setIndustry} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div id=\"industrypanel\" >\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <IndustrySelector handleUpdate={props.setIndustry} />\r\n                </div>\r\n            </div>\r\n            <IndustryGraph industryGDP={props.industryGDP} gdp={props.gdp}/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ElectionGraph from './ElectionGraph';\r\nimport GDPGraph from './GDPGraph';\r\nimport { IndustryPanel } from './IndustryPanel';\r\n\r\n/**\r\n * Holds the components of the container body page\r\n * @param {*} props - electionData, gdpData, industry, industryGDP, setIndustry\r\n */\r\nfunction TrendsContainer(props) {\r\n\r\n    return(\r\n        <div className={\"container-fluid\"}>\r\n            <div className={\"row\"}>\r\n                <div className={\"col-lg-6\"}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <ElectionGraph data={props.electionData} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <GDPGraph gdpData={props.gdpData} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={\"col-lg-6\"}>\r\n                    <IndustryPanel industry={props.industry} industryGDP={props.industryGDP} gdp={props.gdpData} setIndustry={props.setIndustry} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrendsContainer;","import React, { useEffect, useState } from 'react';\r\nimport { getCountyElectionResult, getCountyNameState } from '../County/CountyApi';\r\nimport {getCountyGDPData, getCountyIndustryGDP} from './TrendsApi';\r\nimport CountyFinder from '../County/CountyFinder';\r\nimport TrendsContainer from './TrendsContainer';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction CountyTrends() {\r\n    const [fips, setFips] = useState(null);\r\n    const [countyName, setCountyName] = useState(null);\r\n    const [stateName, setStateName] = useState(null);\r\n    const [industry, setIndustry] = useState(null);\r\n    const [electionData, setElectionData] = useState(null);\r\n    const [gdpData, setGDPdata] = useState(null);\r\n    const [industryGDP, setIndustryGDP] = useState(null);\r\n\r\n    // if fips changes, fetch new election results, new gdp data\r\n    useEffect(() => {\r\n        // fetch new election results\r\n        getCountyElectionResult(fips)\r\n        .then(electionData => {\r\n            setElectionData(electionData[\"electionResult\"]);\r\n        });\r\n        getCountyNameState(fips).then(data => {\r\n            setCountyName(data[\"countyName\"]);\r\n            setStateName(data[\"countyState\"]);\r\n        })\r\n        // fetch new county gdp data\r\n        getCountyGDPData(fips)\r\n            .then(data => setGDPdata(data));\r\n        getCountyIndustryGDP(fips, industry)\r\n            .then(data => setIndustryGDP(data));\r\n    }, [fips, industry]);\r\n\r\n    if (fips) {\r\n        return (\r\n            <div id=\"CountyTrends\">\r\n                <div id=\"Finder\" >\r\n                <CountyFinder getNewCounty={setFips}/>\r\n                </div>\r\n                <h2>County: {countyName}, {stateName}</h2>\r\n                <TrendsContainer electionData={electionData} gdpData={gdpData} industry={industry} industryGDP={industryGDP} setIndustry={setIndustry}/>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div id=\"Finder\" >\r\n            <CountyFinder getNewCounty={setFips}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountyTrends;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getStates } from './TrendsApi';\r\n\r\nexport function StateFinder(props) {\r\n    const [states, setStates] = useState(null);\r\n\r\n    // fetch states\r\n    useEffect(() => {\r\n        getStates().then(result => {\r\n            setStates(result);\r\n        })\r\n    }, []);\r\n\r\n    if (states) {\r\n        return (\r\n            <div className={\"state-finder container\"}>\r\n                <div id={\"state-finder\"} className={\"row\"}>\r\n                    <h2><b>Find a state:</b></h2>\r\n                </div>\r\n                <div className={\"row\"}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr id={\"state-finder-state-container\"}>\r\n                                <td><b>State</b></td>\r\n                                <td>\r\n                                    {\r\n                                        states.map((state, index) => {\r\n                                            return (\r\n                                                <div className={\"btn btn-state\"}\r\n                                                key={index}\r\n                                                onClick={() => props.getNewState(state.STATE)}\r\n                                                id={`btn-state-${state}`}>\r\n                                                {state.STATE}    \r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div id = \"StateFinder\">\r\n                Loading States\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { StateFinder } from './StateFinder';\r\nimport {getStateElectionResult, getStateGDPData, getStateIndustryGDP} from './TrendsApi';\r\nimport TrendsContainer from './TrendsContainer';\r\n\r\nfunction StateTrends() {\r\n    const [currentState, setCurrentState] = useState(null);\r\n    const [industry, setIndustry] = useState(null);\r\n    const [electionData, setElectionData] = useState(null);\r\n    const [gdpData, setGDPdata] = useState(null);\r\n    const [industryGDP, setIndustryGDP] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getStateElectionResult(currentState).then(electionData => {\r\n            setElectionData(electionData);\r\n        });\r\n        getStateGDPData(currentState).then(gdpData => {\r\n            setGDPdata(gdpData);\r\n        });\r\n        getStateIndustryGDP(currentState, industry).then(data => {\r\n            setIndustryGDP(data);\r\n        });\r\n    }, [currentState, industry]);\r\n\r\n    if (currentState) {\r\n        return (\r\n            <div id=\"StateTrends\">\r\n                <div id=\"Finder\" >\r\n                    <StateFinder getNewState={setCurrentState}/>\r\n                </div>\r\n                <h2>State: {currentState}</h2>\r\n                <TrendsContainer electionData={electionData} gdpData={gdpData} industry={industry} industryGDP={industryGDP} setIndustry={setIndustry}/>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div id=\"Finder\" >\r\n                <StateFinder getNewState={setCurrentState}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StateTrends;","import React, { useEffect, useState} from 'react';\r\nimport TrendsContainer from './TrendsContainer';\r\nimport { getNationalElectionResult, getNationalGDPData, getNationalIndustryGDP} from './TrendsApi';\r\n\r\nfunction NationalTrends() {\r\n\r\n    const [electionData, setElectionData] = useState(null);\r\n    const [industry, setIndustry] = useState(null);\r\n    const [gdpData, setGDPdata] = useState(null);\r\n    const [industryGDP, setIndustryGDP] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getNationalElectionResult().then(electionData => {\r\n            setElectionData(electionData);\r\n        });\r\n        getNationalGDPData().then(gdpData => {\r\n            setGDPdata(gdpData);\r\n        });\r\n        getNationalIndustryGDP(industry).then(data => {\r\n            setIndustryGDP(data);\r\n        })\r\n    }, [industry]);\r\n\r\n    return(\r\n        <div id=\"NationalTrends\">\r\n            <h3>USA</h3>\r\n            <TrendsContainer electionData={electionData} gdpData={gdpData} industry={industry} industryGDP={industryGDP} setIndustry={setIndustry}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NationalTrends;","import React, { useState } from 'react';\r\nimport CountyTrends from './CountyTrends';\r\nimport StateTrends from './StateTrends';\r\nimport NationalTrends from './NationalTrends';\r\nimport './Trends.css';\r\n\r\n/**\r\n * Display Trending page\r\n */\r\nfunction Trends() {\r\n  \r\n  const [granularity, setGranularity] = useState(null);\r\n\r\n  document.title = `Trends`;\r\n\r\n  let trendChoice;\r\n  if (granularity === \"National\") {\r\n    trendChoice = <NationalTrends />;\r\n  } else if (granularity === \"State\") {\r\n    trendChoice = <StateTrends />;\r\n  } else if (granularity === \"County\") {\r\n    trendChoice = <CountyTrends />;\r\n  }\r\n  return(\r\n    <div id=\"TrendPage\">\r\n      <button onClick={() => setGranularity(\"National\")}>National Trends</button>\r\n      <button onClick={() => setGranularity(\"State\")}>State Trends</button>\r\n      <button onClick={() => setGranularity(\"County\")}>County Trends</button>\r\n      {trendChoice}\r\n    </div>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default Trends;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Navbar from './Navbar';\r\nimport County from './County/County';\r\nimport Map from './Map/Map';\r\nimport Graph from './Graph/Graph';\r\nimport Trends from './Trends/Trends';\r\n\r\nlet ENDPOINT = \"http://localhost:5000/api/v1\";\r\nif (process.env.NODE_ENV === \"production\"){\r\n    ENDPOINT = `https://election-app-server.herokuapp.com/api/v1`;\r\n}\r\n\r\nexport const MAP_ENDPOINT = ENDPOINT + '/map';\r\nexport const GRAPH_ENDPOINT = ENDPOINT + '/graph';\r\nexport const TRENDS_ENDPOINT = ENDPOINT + '/trends';\r\nexport const COUNTY_ENDPOINT = ENDPOINT + '/county';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Navbar />\r\n        <div id=\"main\">\r\n          <Switch>\r\n            <Route path=\"/map\" exact component={() => <Map />} />\r\n            <Route path=\"/graph\" exact component={() => <Graph />} />\r\n            <Route path=\"/trends\" exact component={() => <Trends />} />\r\n            <Route path=\"/county/:fips\" component={(props) => <County {...props}/>} />\r\n            <Route path=\"/county/\" component={(props) => <County {...props}/>} />\r\n            <Route render={() => <Redirect to=\"/map\" />} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}